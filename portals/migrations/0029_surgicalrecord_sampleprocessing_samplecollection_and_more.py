# Generated by Django 4.2.11 on 2024-08-22 08:33

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('portals', '0028_artificialinsemination_deworming_farmconsultation_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='SurgicalRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('farmer_username', models.CharField(max_length=100)),
                ('livestock_category_affected', models.CharField(choices=[('Cattle', 'Cattle'), ('Sheep', 'Sheep'), ('Goat', 'Goat'), ('Donkey', 'Donkey'), ('Dog', 'Dog'), ('Cat', 'Cat'), ('Poultry', 'Poultry'), ('None', 'None')], max_length=10)),
                ('other_livestock_category', models.CharField(blank=True, max_length=100, null=True)),
                ('name_of_animal', models.CharField(max_length=100)),
                ('registration_number', models.CharField(max_length=100)),
                ('sex_of_animal', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=6)),
                ('age_of_animal', models.CharField(choices=[('Young', 'Young'), ('Adult', 'Adult')], max_length=5)),
                ('nature_of_surgery', models.CharField(choices=[('Emergency', 'Emergency'), ('Elective', 'Elective')], max_length=10)),
                ('type_of_surgery', models.CharField(choices=[('C-section', 'C-section'), ('Interstinal Torsion', 'Interstinal Torsion'), ('Tumor Extraction', 'Tumor Extraction'), ('Canine Spaying', 'Canine Spaying'), ('Hernia', 'Hernia'), ('Warts Extraction', 'Warts Extraction'), ('Skin Repairs', 'Skin Repairs'), ('Castration', 'Castration'), ('Fracture Correction', 'Fracture Correction'), ('Rumenotomy', 'Rumenotomy'), ('None', 'None')], max_length=50)),
                ('other_surgery', models.CharField(blank=True, max_length=100, null=True)),
                ('status_before_operation', models.CharField(choices=[('Good', 'Good'), ('Dehydrated', 'Dehydrated'), ('Weak', 'Weak')], max_length=15)),
                ('pre_operative_management', models.TextField(blank=True, null=True)),
                ('date_of_operation', models.DateField()),
                ('post_operation_management', models.TextField(blank=True, null=True)),
                ('prognosis_of_patient', models.CharField(choices=[('Good', 'Good'), ('Fair', 'Fair'), ('Grave', 'Grave')], max_length=5)),
                ('comment', models.TextField(blank=True, null=True)),
                ('owner_name', models.CharField(max_length=100)),
                ('owner_village', models.CharField(max_length=100)),
                ('owner_mobile_number', models.CharField(max_length=15)),
                ('vet_in_charge', models.CharField(max_length=100)),
                ('vet_registration_number', models.CharField(max_length=100)),
                ('vet_mobile_number', models.CharField(max_length=15)),
                ('signature_and_stamp', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='SampleProcessing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('livestock_category', models.CharField(choices=[('cattle', 'Cattle'), ('sheep', 'Sheep'), ('goat', 'Goat'), ('dog', 'Dog'), ('cat', 'Cat'), ('horse', 'Horse'), ('poultry', 'Poultry'), ('none', 'None')], max_length=10)),
                ('type_of_sample_received', models.CharField(max_length=255)),
                ('sample_rating', models.CharField(choices=[('highly_infectious', 'Highly Infectious'), ('not_infectious', 'Not Infectious')], max_length=20)),
                ('name_of_animal', models.CharField(max_length=100)),
                ('registration_number', models.CharField(max_length=100)),
                ('sex_of_animal', models.CharField(choices=[('male', 'Male'), ('female', 'Female')], max_length=6)),
                ('age_of_animal', models.CharField(choices=[('young', 'Young'), ('adult', 'Adult')], max_length=10)),
                ('date_of_reception', models.DateField()),
                ('date_of_sample_processing', models.DateField()),
                ('number_of_days_for_processing', models.IntegerField()),
                ('date_of_sample_results', models.DateField()),
                ('laboratory_findings', models.TextField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('owner_name', models.CharField(max_length=100)),
                ('owner_village', models.CharField(max_length=100)),
                ('owner_mobile_number', models.CharField(max_length=15)),
                ('lab_technologist_name', models.CharField(max_length=100)),
                ('lab_technologist_registration_number', models.CharField(max_length=100)),
                ('lab_technologist_mobile_number', models.CharField(max_length=15)),
                ('laboratory_name', models.CharField(max_length=100)),
                ('signature_and_stamp', models.CharField(max_length=255)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sample_processing_records', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SampleCollection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('livestock_category', models.CharField(choices=[('cattle', 'Cattle'), ('sheep', 'Sheep'), ('goat', 'Goat'), ('dog', 'Dog'), ('cat', 'Cat'), ('horse', 'Horse'), ('poultry', 'Poultry'), ('none', 'None')], max_length=10)),
                ('other_livestock', models.CharField(blank=True, max_length=100, null=True)),
                ('name_of_animal', models.CharField(max_length=100)),
                ('registration_number', models.CharField(max_length=100)),
                ('age_of_animal', models.CharField(choices=[('young', 'Young'), ('adult', 'Adult')], max_length=10)),
                ('sex_of_animal', models.CharField(choices=[('male', 'Male'), ('female', 'Female')], max_length=6)),
                ('history_of_animal', models.TextField()),
                ('clinical_signs_of_animal', models.TextField()),
                ('type_of_sample_collected', models.CharField(choices=[('milk', 'Milk'), ('blood_smear', 'Blood Smear'), ('lymph_node_smear', 'Lymph Node Smear'), ('urine', 'Urine'), ('faeces', 'Faeces'), ('ear_notching', 'Ear Notching'), ('biopsy', 'Biopsy'), ('skin_scraping', 'Skin Scraping'), ('vaginal_swap', 'Vaginal Swap'), ('head', 'Head')], max_length=20)),
                ('date_of_sampling', models.DateField()),
                ('sample_storage_condition', models.CharField(max_length=100)),
                ('means_of_transportation', models.CharField(max_length=100)),
                ('sample_rating', models.CharField(choices=[('highly_infectious', 'Highly Infectious'), ('not_infectious', 'Not Infectious')], max_length=20)),
                ('owner_name', models.CharField(max_length=100)),
                ('owner_village', models.CharField(max_length=100)),
                ('owner_mobile_number', models.CharField(max_length=15)),
                ('vet_in_charge_name', models.CharField(max_length=100)),
                ('vet_in_charge_registration_number', models.CharField(max_length=100)),
                ('vet_in_charge_mobile_number', models.CharField(max_length=15)),
                ('signature_and_stamp', models.CharField(max_length=255)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sample_collection_records', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LivestockIncident',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('livestock_category', models.CharField(choices=[('cattle', 'Cattle'), ('sheep', 'Sheep'), ('goat', 'Goat'), ('dog', 'Dog'), ('cat', 'Cat'), ('horse', 'Horse'), ('poultry', 'Poultry')], max_length=10)),
                ('animal_name', models.CharField(max_length=100)),
                ('sex', models.CharField(choices=[('male', 'Male'), ('female', 'Female')], max_length=6)),
                ('age', models.PositiveIntegerField()),
                ('case_history', models.TextField()),
                ('number_of_sick_animals', models.PositiveIntegerField()),
                ('morbidity_rate', models.DecimalField(decimal_places=2, max_digits=5)),
                ('incidence_date', models.DateField()),
                ('incidence_time', models.TimeField()),
                ('cadaver_signs', models.TextField()),
                ('open_for_pm', models.CharField(choices=[('yes', 'Yes'), ('no', 'No')], max_length=3)),
                ('no_pm_reason', models.TextField(blank=True, null=True)),
                ('path_condition', models.TextField()),
                ('sample_sent', models.CharField(choices=[('yes', 'Yes'), ('no', 'No')], max_length=3)),
                ('cause_notifiable', models.CharField(choices=[('yes', 'Yes'), ('no', 'No')], max_length=3)),
                ('cause_zoonotic', models.CharField(choices=[('yes', 'Yes'), ('no', 'No')], max_length=3)),
                ('precaution', models.TextField()),
                ('disposal_way', models.CharField(choices=[('burial', 'Burial'), ('cremation', 'Cremation')], max_length=10)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LaboratoryRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('livestock_category', models.CharField(choices=[('cattle', 'Cattle'), ('sheep', 'Sheep'), ('goat', 'Goat'), ('dog', 'Dog'), ('cat', 'Cat'), ('horse', 'Horse'), ('poultry', 'Poultry'), ('none', 'None')], max_length=10)),
                ('other_livestock', models.CharField(blank=True, max_length=100, null=True)),
                ('name_of_animal', models.CharField(max_length=100)),
                ('registration_number', models.CharField(max_length=100)),
                ('age_of_animal', models.CharField(choices=[('young', 'Young'), ('adult', 'Adult')], max_length=10)),
                ('sex_of_animal', models.CharField(choices=[('male', 'Male'), ('female', 'Female')], max_length=6)),
                ('history_of_animal', models.TextField()),
                ('clinical_signs', models.TextField()),
                ('type_of_sample_collected', models.CharField(choices=[('milk', 'Milk'), ('blood_smear', 'Blood Smear'), ('lymph_node_smear', 'Lymph Node Smear'), ('urine', 'Urine'), ('faeces', 'Faeces'), ('cfs', 'CFS'), ('biopsy', 'Biopsy'), ('skin_scraping', 'Skin Scraping'), ('vaginal_swap', 'Vaginal Swap'), ('head', 'Head')], max_length=20)),
                ('date_of_sampling', models.DateField()),
                ('sample_storage_condition', models.CharField(max_length=255)),
                ('means_of_transportation', models.CharField(choices=[('vehicle', 'Vehicle'), ('motorbike', 'Motorbike'), ('footing', 'Footing')], max_length=10)),
                ('sample_rating', models.CharField(choices=[('highly_infectious', 'Highly Infectious'), ('not_infectious', 'Not Infectious')], max_length=20)),
                ('owner_name', models.CharField(max_length=100)),
                ('owner_village', models.CharField(max_length=100)),
                ('owner_mobile_number', models.CharField(max_length=15)),
                ('vet_in_charge_name', models.CharField(max_length=100)),
                ('vet_registration_number', models.CharField(max_length=100)),
                ('vet_mobile_number', models.CharField(max_length=15)),
                ('signature_and_stamp', models.CharField(max_length=255)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='laboratory_records', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]

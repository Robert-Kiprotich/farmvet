# Generated by Django 4.2.11 on 2024-06-18 19:21

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AnimalSale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_sold', models.IntegerField()),
                ('name', models.CharField(max_length=100)),
                ('reg_no', models.CharField(max_length=100)),
                ('date_sold', models.DateField()),
                ('age', models.IntegerField()),
                ('breed', models.CharField(choices=[('Dog', [('Labrador Retriever', 'Labrador Retriever'), ('German Shepherd', 'German Shepherd'), ('Golden Retriever', 'Golden Retriever'), ('Bulldog', 'Bulldog'), ('Beagle', 'Beagle'), ('Poodle', 'Poodle'), ('Boxer', 'Boxer'), ('Dachshund', 'Dachshund'), ('Yorkshire Terrier', 'Yorkshire Terrier'), ('Rottweiler', 'Rottweiler')]), ('Cat', [('Siamese', 'Siamese'), ('Persian', 'Persian'), ('Maine Coon', 'Maine Coon'), ('Ragdoll', 'Ragdoll'), ('British Shorthair', 'British Shorthair'), ('Sphynx', 'Sphynx'), ('Bengal', 'Bengal'), ('Abyssinian', 'Abyssinian'), ('Scottish Fold', 'Scottish Fold'), ('Burmese', 'Burmese')]), ('Horse', [('Thoroughbred', 'Thoroughbred'), ('Quarter Horse', 'Quarter Horse'), ('Arabian', 'Arabian'), ('Appaloosa', 'Appaloosa'), ('Paint Horse', 'Paint Horse'), ('Morgan', 'Morgan'), ('Tennessee Walking Horse', 'Tennessee Walking Horse'), ('Friesian', 'Friesian'), ('Pony of the Americas', 'Pony of the Americas'), ('Miniature Horse', 'Miniature Horse')]), ('Cattle', [('Angus', 'Angus'), ('Hereford', 'Hereford'), ('Charolais', 'Charolais'), ('Simmental', 'Simmental'), ('Limousin', 'Limousin'), ('Texas Longhorn', 'Texas Longhorn'), ('Holstein', 'Holstein'), ('Jersey', 'Jersey'), ('Gelbvieh', 'Gelbvieh'), ('Brahman', 'Brahman')]), ('Sheep', [('Merino', 'Merino'), ('Dorper', 'Dorper'), ('Suffolk', 'Suffolk'), ('Rambouillet', 'Rambouillet'), ('Hampshire', 'Hampshire'), ('Shropshire', 'Shropshire'), ('Dorset', 'Dorset'), ('Cotswold', 'Cotswold'), ('Lincoln', 'Lincoln'), ('Targhee', 'Targhee')]), ('Goat', [('Boer', 'Boer'), ('Nubian', 'Nubian'), ('Saanen', 'Saanen'), ('Angora', 'Angora'), ('LaMancha', 'LaMancha'), ('Alpine', 'Alpine'), ('Toggenburg', 'Toggenburg'), ('Kiko', 'Kiko'), ('Spanish', 'Spanish'), ('Pygmy', 'Pygmy')])], default='', max_length=100)),
                ('sex', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=10)),
                ('weight', models.DecimalField(decimal_places=2, max_digits=10)),
                ('reason', models.TextField()),
                ('comment', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Archaricides',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_purchase', models.DateField(verbose_name='Date of Purchase')),
                ('chemical_name', models.CharField(max_length=30, verbose_name='Chemical Name')),
                ('quantity', models.CharField(max_length=255, verbose_name='Quantity')),
                ('company', models.CharField(max_length=255, verbose_name='Company')),
                ('application_rate', models.CharField(max_length=255, verbose_name='Rate')),
                ('expiry_date', models.DateField(verbose_name='Expiry Date')),
                ('times_used', models.CharField(max_length=255, verbose_name='Frequency')),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Cost')),
                ('comment', models.TextField(blank=True, verbose_name='Comment')),
            ],
        ),
        migrations.CreateModel(
            name='Calf',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_given', models.CharField(default='', max_length=100)),
                ('birth_date', models.DateField()),
                ('breed', models.CharField(default='', max_length=100)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], default='', max_length=10)),
                ('sire_details', models.CharField(default='', max_length=100)),
                ('color', models.CharField(default='', max_length=100)),
                ('birth_weight', models.FloatField()),
                ('medical_conditions', models.CharField(blank=True, default='', max_length=100)),
                ('registration_number', models.CharField(default='', max_length=100, unique=True)),
                ('registration_date', models.DateField(blank=True, null=True)),
                ('expected_weaning', models.DateField(blank=True, null=True)),
                ('breeding_level', models.CharField(choices=[('Purebred', 'Purebred'), ('Crossbred', 'Crossbred'), ('Mixed Breed', 'Mixed Breed')], default='Purebreed', max_length=100)),
                ('comments', models.CharField(blank=True, default='', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Culling',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100)),
                ('age', models.CharField(default='', max_length=100)),
                ('gender', models.CharField(default='', max_length=100)),
                ('animal_type', models.CharField(choices=[('Cow', 'Cow'), ('Sheep', 'Sheep'), ('Goat', 'Goat')], default='', max_length=100)),
                ('breed', models.CharField(default='', max_length=100)),
                ('culling_method', models.CharField(choices=[('Killing', 'Killing'), ('Selling', 'Selling')], default='', max_length=100)),
                ('no_of_culled', models.FloatField(default=0)),
                ('culling_reason', models.CharField(choices=[('Disease', 'Disease'), ('Old age', 'Old age'), ('Poor performance', 'Poor performance'), ('Genetic defects', 'Genetic defects'), ('Other', 'Other')], default='', max_length=100)),
                ('reg_no', models.CharField(default='', max_length=100, unique=True)),
                ('culling_date', models.DateField()),
                ('culling_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('comment', models.TextField(blank=True, default='', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DairyEquipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, verbose_name='Name')),
                ('date_of_purchase', models.DateField(verbose_name='Date of Purchase')),
                ('quantity', models.CharField(max_length=255, verbose_name='quantity')),
                ('equipment_type', models.CharField(max_length=255, verbose_name='Type')),
                ('company', models.CharField(max_length=255, verbose_name='Company')),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Cost')),
                ('source', models.CharField(max_length=255, verbose_name='Source')),
                ('comment', models.TextField(blank=True, verbose_name='Comment')),
            ],
        ),
        migrations.CreateModel(
            name='DairyHygiene',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chemical_name', models.CharField(max_length=255, verbose_name='Chemical Name')),
                ('date_of_purchase', models.DateField(verbose_name='Date of Purchase')),
                ('item_purchased', models.CharField(max_length=255, verbose_name='Item')),
                ('company', models.CharField(max_length=255, verbose_name='Company')),
                ('quantity', models.CharField(max_length=255, verbose_name='quantity')),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Cost')),
                ('expiry_date', models.DateField(verbose_name='Expiry Date')),
                ('comment', models.TextField(blank=True, verbose_name='Comment')),
            ],
        ),
        migrations.CreateModel(
            name='DeadAnimal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=30)),
                ('farm_name', models.CharField(default='', max_length=100)),
                ('no_of_affected', models.FloatField(default=0)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], default='', max_length=10)),
                ('breed', models.CharField(default='', max_length=100)),
                ('sickness_period', models.CharField(default='', max_length=30)),
                ('cause_of_death', models.CharField(default='', max_length=30)),
                ('death_date', models.DateField(blank=True, null=True)),
                ('death_time', models.TimeField(blank=True, null=True)),
                ('signs_before_death', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('postmortem_by_vet', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='', max_length=3)),
                ('safety_precaution', models.CharField(choices=[('Burying', 'Burying'), ('Cremation', 'Cremation')], default='', max_length=30)),
                ('comment', models.CharField(blank=True, default='', max_length=300, null=True, verbose_name='comment')),
            ],
        ),
        migrations.CreateModel(
            name='Employees',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_name', models.CharField(max_length=100)),
                ('id_no', models.CharField(max_length=20, unique=True)),
                ('phone_no', models.CharField(max_length=15)),
                ('country', models.CharField(max_length=50)),
                ('district', models.CharField(max_length=50)),
                ('village', models.CharField(max_length=50)),
                ('next_of_kin', models.CharField(max_length=100)),
                ('next_of_kin_phone_no', models.CharField(max_length=15)),
                ('area_of_residence', models.CharField(max_length=100)),
                ('chief_phone_no', models.CharField(max_length=15)),
                ('employee_position', models.CharField(max_length=50)),
                ('salary', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_method', models.CharField(choices=[('Bank Transfer', 'Bank Transfer'), ('Cash', 'Cash'), ('Cheque', 'Cheque'), ('Mobile Banking', 'Mobile Banking')], max_length=30)),
                ('bank_account', models.CharField(blank=True, max_length=30, null=True)),
                ('mode_of_employment', models.CharField(choices=[('Full-Time', 'Full-Time'), ('Part-Time', 'Part-Time'), ('Contract', 'Contract'), ('Internship', 'Internship')], max_length=20)),
                ('contract_rewal_period', models.IntegerField(help_text='Contract renewal period in months')),
            ],
        ),
        migrations.CreateModel(
            name='Feeds',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_purchase', models.DateField(verbose_name='Date of Purchase')),
                ('feed_type', models.CharField(choices=[('Dairy Meal', 'Dairy Meal'), ('Wheat Bran', 'Wheat Bran'), ('Maize Chaff', 'Maize Chaff'), ('Sunflower', 'Sunflower')], max_length=15, verbose_name='Feed Type')),
                ('company', models.CharField(max_length=255, verbose_name='Company')),
                ('expiry_date', models.DateField(verbose_name='Expiry Date')),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Cost')),
                ('comment', models.TextField(blank=True, verbose_name='Comment')),
            ],
        ),
        migrations.CreateModel(
            name='GestationMonitoring',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gestation_date', models.DateField()),
                ('repeat_date', models.DateField(blank=True, null=True)),
                ('expected_delivery_date', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='HeatSignMonitoring',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('reg_no', models.CharField(max_length=20)),
                ('status', models.CharField(choices=[('Adult', 'Adult'), ('Heifer', 'Heifer')], max_length=10)),
                ('date_of_heat_sign', models.DateField()),
                ('exp_date_of_repeated_heat', models.DateField()),
                ('reason_skip_monitoring', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='LactatingCow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cow_name', models.CharField(max_length=100)),
                ('reg_no', models.CharField(max_length=50, unique=True)),
                ('sire_details', models.CharField(max_length=100)),
                ('breed', models.CharField(max_length=50)),
                ('breeding_level', models.CharField(choices=[('Purebred', 'Purebred'), ('Crossbred', 'Crossbred'), ('Mixed Breed', 'Mixed Breed')], max_length=50)),
                ('age', models.PositiveIntegerField(help_text='Age in years')),
                ('calving_down_date', models.DateField()),
                ('no_of_calves', models.PositiveIntegerField()),
                ('average_daily_milk', models.FloatField(help_text='Average daily milk production in liters')),
                ('lactation_stage', models.CharField(choices=[('early', 'Early'), ('mid', 'Mid'), ('late', 'Late')], max_length=10)),
                ('expected_date_of_drying_off', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Livestock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('animal_type', models.CharField(choices=[('Cow', 'Cow'), ('Goat', 'Goat'), ('Sheep', 'Sheep'), ('Pig', 'Pig'), ('Chicken', 'Chicken')], default='', max_length=50)),
                ('breed_category', models.CharField(choices=[('Dog', [('Labrador Retriever', 'Labrador Retriever'), ('German Shepherd', 'German Shepherd'), ('Golden Retriever', 'Golden Retriever'), ('Bulldog', 'Bulldog'), ('Beagle', 'Beagle'), ('Poodle', 'Poodle'), ('Boxer', 'Boxer'), ('Dachshund', 'Dachshund'), ('Yorkshire Terrier', 'Yorkshire Terrier'), ('Rottweiler', 'Rottweiler')]), ('Cat', [('Siamese', 'Siamese'), ('Persian', 'Persian'), ('Maine Coon', 'Maine Coon'), ('Ragdoll', 'Ragdoll'), ('British Shorthair', 'British Shorthair'), ('Sphynx', 'Sphynx'), ('Bengal', 'Bengal'), ('Abyssinian', 'Abyssinian'), ('Scottish Fold', 'Scottish Fold'), ('Burmese', 'Burmese')]), ('Horse', [('Thoroughbred', 'Thoroughbred'), ('Quarter Horse', 'Quarter Horse'), ('Arabian', 'Arabian'), ('Appaloosa', 'Appaloosa'), ('Paint Horse', 'Paint Horse'), ('Morgan', 'Morgan'), ('Tennessee Walking Horse', 'Tennessee Walking Horse'), ('Friesian', 'Friesian'), ('Pony of the Americas', 'Pony of the Americas'), ('Miniature Horse', 'Miniature Horse')]), ('Cattle', [('Angus', 'Angus'), ('Hereford', 'Hereford'), ('Charolais', 'Charolais'), ('Simmental', 'Simmental'), ('Limousin', 'Limousin'), ('Texas Longhorn', 'Texas Longhorn'), ('Holstein', 'Holstein'), ('Jersey', 'Jersey'), ('Gelbvieh', 'Gelbvieh'), ('Brahman', 'Brahman')]), ('Sheep', [('Merino', 'Merino'), ('Dorper', 'Dorper'), ('Suffolk', 'Suffolk'), ('Rambouillet', 'Rambouillet'), ('Hampshire', 'Hampshire'), ('Shropshire', 'Shropshire'), ('Dorset', 'Dorset'), ('Cotswold', 'Cotswold'), ('Lincoln', 'Lincoln'), ('Targhee', 'Targhee')]), ('Goat', [('Boer', 'Boer'), ('Nubian', 'Nubian'), ('Saanen', 'Saanen'), ('Angora', 'Angora'), ('LaMancha', 'LaMancha'), ('Alpine', 'Alpine'), ('Toggenburg', 'Toggenburg'), ('Kiko', 'Kiko'), ('Spanish', 'Spanish'), ('Pygmy', 'Pygmy')])], default='', max_length=50)),
                ('date_added', models.DateField()),
                ('no_of_animals', models.FloatField(default=0)),
                ('no_of_males', models.FloatField(default=0)),
                ('no_of_females', models.FloatField(default=0)),
                ('no_of_adults', models.FloatField(default=0)),
                ('no_of_young', models.FloatField(default=0)),
                ('no_of_dead', models.FloatField(default=0)),
                ('reason_for_death', models.CharField(default='', max_length=100)),
                ('comment', models.TextField(blank=True, default='', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='LivestockInsurance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_insured', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Number Insured')),
                ('company', models.CharField(max_length=255, verbose_name='Company')),
                ('mode_of_payment', models.CharField(max_length=255, verbose_name='Mode Of payment')),
                ('payment_date', models.DateField(verbose_name='Payment Date')),
                ('total', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Total')),
                ('comment', models.TextField(blank=True, verbose_name='Comment')),
            ],
        ),
        migrations.CreateModel(
            name='MilkRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('time_of_milking', models.CharField(choices=[('morning', 'Morning'), ('noon', 'Noon'), ('evening', 'Evening')], max_length=10)),
                ('quantity', models.FloatField(help_text='Amount of milk in liters')),
            ],
        ),
        migrations.CreateModel(
            name='Minerals',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_purchase', models.DateField(verbose_name='Date of Purchase')),
                ('mineral_type', models.CharField(choices=[('Dairy Lick', 'Dairy Lick'), ('Stock Lick', 'Stock Lick'), ('Dry Cow', 'Dry Cow'), ('Joto', 'Joto'), ('Calves Mineral', 'Calves Mineral')], max_length=15, verbose_name='Feed Type')),
                ('quantity', models.CharField(max_length=255, verbose_name='Company')),
                ('company', models.CharField(max_length=255, verbose_name='Company')),
                ('expiry_date', models.DateField(verbose_name='Expiry Date')),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Cost')),
                ('comment', models.TextField(blank=True, verbose_name='Comment')),
            ],
        ),
        migrations.CreateModel(
            name='MonthlyMilkRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.DateField()),
                ('total_quantity', models.FloatField(help_text='Total milk in liters for the month')),
            ],
        ),
        migrations.CreateModel(
            name='NewAnimal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100)),
                ('reg_no', models.CharField(default='', max_length=100)),
                ('source', models.CharField(choices=[('Market', 'Market'), ('Farmer', 'Farmer')], default='', max_length=50)),
                ('farmer_name', models.CharField(default='', max_length=100)),
                ('animal_type', models.CharField(default='', max_length=100)),
                ('breed', models.CharField(default='', max_length=100)),
                ('breeding_level', models.CharField(choices=[('Purebred', 'Purebred'), ('Crossbred', 'Crossbred'), ('Mixed Breed', 'Mixed Breed')], default='', max_length=100)),
                ('defect', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='', max_length=3)),
                ('defect_reason', models.TextField(default='')),
                ('animal_color', models.CharField(default='', max_length=100)),
                ('market_value', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('medical_history', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='', max_length=3)),
                ('assessed_by_vet', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='', max_length=3)),
                ('insured', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='', max_length=3)),
                ('insuring_company', models.CharField(default='', max_length=100)),
                ('date_added', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PregnancyMonitoring',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('reg_no', models.CharField(max_length=50)),
                ('date_of_ai', models.DateField()),
                ('exp_heat_date', models.DateField()),
                ('first_preg_diag_date', models.DateField()),
                ('pd_status', models.CharField(choices=[('positive', 'Positive'), ('negative', 'Negative')], max_length=20)),
                ('approximate_preg_months', models.IntegerField()),
                ('vet_recommendation', models.TextField()),
                ('date_of_second_diag', models.DateField(blank=True, null=True)),
                ('foetus_status', models.CharField(choices=[('progressive', 'Progressive'), ('non-progressive', 'Non-Progressive')], max_length=20)),
                ('non_prog_reason', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('action_to_take', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('steaming_up_date', models.DateField(blank=True, null=True)),
                ('expected_dob', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Salaries',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=255, verbose_name='Category')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('identification', models.CharField(max_length=255, verbose_name='identification')),
                ('mode_of_payment', models.CharField(max_length=255, verbose_name='Mode')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Amount')),
                ('balance', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Cost')),
                ('payment_date', models.DateField(verbose_name='Payment Date')),
                ('payment_type', models.CharField(max_length=255, verbose_name='Type')),
                ('comment', models.TextField(blank=True, verbose_name='Comment')),
            ],
        ),
        migrations.CreateModel(
            name='Vet_Forms',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vet_username', models.CharField(max_length=20)),
                ('is_sick_approach_form', models.BooleanField(default=False)),
                ('is_dead_approach_form', models.BooleanField(default=False)),
                ('is_surgical_approach_form', models.BooleanField(default=False)),
                ('is_deworming_form', models.BooleanField(default=False)),
                ('is_vaccination_form', models.BooleanField(default=False)),
                ('is_artificial_insemination_form', models.BooleanField(default=False)),
                ('is_calf_registration_form', models.BooleanField(default=False)),
                ('is_livestock_inventory_form', models.BooleanField(default=False)),
                ('is_farm_consultation', models.BooleanField(default=False)),
                ('is_pregnancy_diagnosis_form', models.BooleanField(default=False)),
                ('is_vet_billing_form', models.BooleanField(default=False)),
                ('is_lab_form', models.BooleanField(default=False)),
                ('is_referral_form', models.BooleanField(default=False)),
                ('report_created_on', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-report_created_on'],
            },
        ),
        migrations.CreateModel(
            name='VeterinaryBills',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_billing', models.DateField(verbose_name='Date of Billing')),
                ('bill_category', models.CharField(max_length=20, verbose_name='Bill Category')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Amount')),
                ('balance', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Balance')),
                ('billing_details', models.CharField(max_length=255, verbose_name='Company')),
                ('comment', models.TextField(blank=True, verbose_name='Comment')),
            ],
        ),
        migrations.CreateModel(
            name='VeterinaryDrugs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('category', models.CharField(choices=[('Antibiotics', 'Antibiotics '), ('Vaccines', 'Vaccines'), ('Hormones', 'Hormones'), ('Hormones', 'Hormones')], max_length=15, verbose_name='Category')),
                ('company', models.CharField(max_length=50, verbose_name='company')),
                ('expiry_date', models.DateField(verbose_name='Expiry Date')),
                ('strange_condition', models.CharField(max_length=255, verbose_name='Strange Condition')),
                ('vet_reg', models.CharField(max_length=255, verbose_name='Vet Registration')),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Number Insured')),
                ('comment', models.TextField(blank=True, verbose_name='Comment')),
            ],
        ),
        migrations.CreateModel(
            name='Artificial_Insemination_Form',
            fields=[
                ('vet_form', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='portals.vet_forms')),
                ('farmer_username', models.CharField(max_length=12, verbose_name='Farmer Username')),
                ('Name_of_the_cow', models.CharField(max_length=12, verbose_name='Name of the cow or identification number of the cow')),
                ('sex_of_the_calf_born', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], default='M', max_length=20, verbose_name='Sex of the calf born')),
                ('date_of_birth', models.DateField(verbose_name='Date of birth')),
                ('nature_of_birth', models.CharField(choices=[('A', 'Alive'), ('D', 'Dead')], default='A', max_length=20, verbose_name='Nature of birth')),
                ('number_of_repeat', models.CharField(blank=True, max_length=100, null=True, verbose_name='Number of repeat')),
                ('abortion_rate', models.CharField(blank=True, max_length=100, null=True, verbose_name='Abortion rate')),
                ('reason_for_the_cause_of_abortion', models.CharField(blank=True, max_length=100, null=True, verbose_name='reason for abortion')),
                ('time_of_heat_sign', models.TimeField(verbose_name='Time of heat sign')),
                ('date_of_insemination', models.DateField(verbose_name='Date of insemination')),
                ('time_of_insemination', models.TimeField(verbose_name='Time of insemination')),
                ('nature_of_the_breeding', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nature of breeding')),
                ('sire_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Sire`s name')),
                ('sire_origin', models.CharField(blank=True, max_length=200, null=True, verbose_name='Sire origin')),
                ('bull_code', models.CharField(blank=True, max_length=100, null=True, verbose_name='Bull code')),
                ('breed_used', models.CharField(blank=True, max_length=100, null=True, verbose_name='Breed used')),
                ('source_of_semen', models.CharField(blank=True, max_length=100, null=True, verbose_name='Source of the semen')),
                ('date_of_repeat_checked', models.DateField(verbose_name='Date of repeat check')),
                ('date_of_pregnancy_diagnosis', models.DateField(verbose_name='Date of pregnancy')),
                ('expected_date_of_calving', models.DateField(verbose_name='expected date of calving')),
                ('comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Calf_Registration_Form',
            fields=[
                ('vet_form', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='portals.vet_forms')),
                ('farmer_username', models.CharField(default='', max_length=12, verbose_name='Farmer Username')),
                ('date_of_birth', models.DateField(verbose_name='Date of birth')),
                ('sex_of_the_calf', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], default='M', max_length=20, verbose_name='Sex of the calf')),
                ('birth_weight', models.IntegerField(verbose_name='Birth weight')),
                ('breed_of_the_calf', models.CharField(max_length=20, verbose_name='breed of the calf')),
                ('colour_of_the_breed', models.CharField(max_length=20, verbose_name='Colour of the breed')),
                ('status_of_the_calf', models.CharField(choices=[('H', 'Healthy'), ('D', 'Deformed')], default='H', max_length=100, verbose_name='Status of the calf')),
                ('breeching_level_of_the_calf', models.CharField(choices=[('F', 'First'), ('S', 'Second'), ('T', 'Third'), ('P', 'Pedegree')], default='F', max_length=100, verbose_name='Breeching level of the calf')),
                ('sire_details', models.CharField(blank=True, max_length=100, null=True)),
                ('expected_date_of_weaning', models.DateField(verbose_name='Expected date of weaning')),
                ('comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Death_Approach_Form',
            fields=[
                ('vet_form', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='portals.vet_forms')),
                ('farmer_username', models.CharField(max_length=12, verbose_name='Farmer Username')),
                ('name_of_the_animal', models.CharField(blank=True, max_length=30, null=True, verbose_name='Name or identification number')),
                ('sex_of_the_animal', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female')], default='', max_length=20, null=True, verbose_name='Sex of the animal')),
                ('num_of_species_dead', models.IntegerField(blank=True, default=1, null=True, verbose_name='Number of animals dead')),
                ('case_history', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('mortality_rate', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('death_date', models.DateField(blank=True, null=True, verbose_name='Date the animal died')),
                ('death_time', models.TimeField(blank=True, null=True, verbose_name='At what time the animal the animals died')),
                ('signs_of_cadever_on_the_ground', models.CharField(blank=True, max_length=200, null=True, verbose_name='What are the signs of signs of the cadever on the ground')),
                ('carcass_opened_for_the_pm', models.CharField(blank=True, choices=[('Y', 'yes'), ('N', 'no')], default='Y', max_length=5, null=True, verbose_name='Did you open up the carcass fo PM?')),
                ('if_yes_pathological_signs', models.CharField(blank=True, max_length=100, null=True, verbose_name='If yes,what were the signs of the pathological conditions?')),
                ('if_no_reason', models.CharField(blank=True, max_length=100, null=True, verbose_name='If no,what could have been the reason?')),
                ('sample_sent_lab', models.CharField(choices=[('Y', 'yes'), ('N', 'no')], default='Y', max_length=5, null=True, verbose_name='Did you send any sample to the laboratory?')),
                ('if_yes_lab_report', models.CharField(blank=True, max_length=100, null=True, verbose_name='if yes,what was the laboratory report?')),
                ('death_cause_notifiable', models.CharField(blank=True, choices=[('Y', 'yes'), ('N', 'no')], default='Y', max_length=5, null=True, verbose_name='Is the cause of dead notifiable?')),
                ('if_yes_message_to_relevant_body', models.CharField(blank=True, max_length=100, null=True, verbose_name='If yes,send message to the relevant body.')),
                ('intervention_regards_to_death', models.CharField(blank=True, max_length=100, null=True, verbose_name='What were the necessary intervention in regard to the cause of the dead')),
                ('comment', models.CharField(blank=True, max_length=300, null=True, verbose_name='comment')),
            ],
        ),
        migrations.CreateModel(
            name='Deworming_Form',
            fields=[
                ('vet_form', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='portals.vet_forms')),
                ('farmer_username', models.CharField(max_length=12, verbose_name='Farmer Username')),
                ('species_targeted', models.CharField(blank=True, choices=[('0', 'cattle'), ('1', 'sheep'), ('2', 'goat'), ('3', 'donkey'), ('4', 'dog'), ('5', 'horse'), ('6', 'poultry'), ('7', 'others')], default='0', max_length=20, null=True, verbose_name='Species targetted')),
                ('number_of_adults', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Number of adults')),
                ('number_of_young_ones', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Number of young ones')),
                ('body_condition_of_the_animal', models.CharField(blank=True, choices=[('G', 'good'), ('F', 'fair'), ('P', 'poor')], default='G', max_length=20, null=True, verbose_name='Body condition of the animal(s)')),
                ('date_of_deworming', models.DateField()),
                ('drug_choices', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Drug of choice')),
                ('target_parasites', models.CharField(blank=True, max_length=100, null=True, verbose_name='Target parasite')),
                ('withdrawal_period', models.CharField(blank=True, max_length=100, null=True)),
                ('side_effects', models.CharField(blank=True, max_length=100, null=True, verbose_name='Any side effect?')),
                ('next_date_deworming', models.DateField(verbose_name='Next date of deworming')),
                ('comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Farm_Consultation',
            fields=[
                ('vet_form', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='portals.vet_forms')),
                ('farmer_username', models.CharField(max_length=12, verbose_name='Farmer Username')),
                ('dairy_cows', models.CharField(blank=True, max_length=12, null=True, verbose_name='Dairy cows unit')),
                ('beef_production', models.CharField(blank=True, max_length=20, null=True, verbose_name='Beef production unit')),
                ('poultry', models.CharField(blank=True, max_length=30, null=True, verbose_name='Poultry production unit')),
                ('sheep', models.CharField(blank=True, max_length=50, null=True, verbose_name='Sheep production unit')),
                ('goat', models.CharField(blank=True, max_length=100, null=True, verbose_name='Goat production unit')),
                ('canine', models.CharField(blank=True, max_length=100, null=True, verbose_name='Canine keeping')),
                ('other', models.CharField(blank=True, max_length=100, null=True, verbose_name='Other livestock')),
                ('give_recommendation', models.CharField(blank=True, max_length=100, null=True, verbose_name='Give recommendation.')),
                ('grazing', models.CharField(blank=True, max_length=200, null=True, verbose_name='Grazing system and pasture management.')),
                ('disease', models.CharField(blank=True, max_length=100, null=True, verbose_name='Disease control.')),
                ('farm', models.CharField(blank=True, max_length=100, null=True, verbose_name='Farm biosecurity')),
                ('culling_selection', models.CharField(blank=True, max_length=100, null=True, verbose_name='Culling and Selection.')),
                ('farm_manager', models.CharField(choices=[('V', 'Veterinary Officer'), ('L', 'Livestock Officer'), ('N', 'None')], default='', max_length=20, verbose_name='Is the farm managed by a veterinary officer or livestock officer?')),
                ('if_no', models.CharField(blank=True, max_length=100, null=True, verbose_name='If none,who is the farm consultant?')),
                ('name_incharge', models.CharField(blank=True, max_length=100, null=True, verbose_name='Name of the veterinary officer incharge.')),
                ('reg_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='Registration number.')),
                ('comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Laboratory_Form',
            fields=[
                ('vet_form', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='portals.vet_forms')),
                ('farmer_username', models.CharField(max_length=12, verbose_name='Farmer Username')),
                ('category_ssp', models.CharField(max_length=12, verbose_name='Category of the spp')),
                ('sample', models.CharField(max_length=12, verbose_name='Samples collected')),
                ('name_animal', models.CharField(max_length=12, verbose_name='Namer of the animal')),
                ('date_of_submission', models.DateField(verbose_name='Date of submission')),
                ('idenfication', models.IntegerField(blank=True, null=True, verbose_name='ID number')),
                ('storage', models.CharField(max_length=100, verbose_name='Method of storage')),
                ('transportation', models.CharField(max_length=200, verbose_name='Transportation means')),
                ('expected_duration', models.CharField(max_length=100, verbose_name='Expected duration of the sampling process')),
                ('sample_collected_sick_animal', models.CharField(choices=[('Y', 'yes'), ('N', 'no')], default='Y', max_length=5, null=True, verbose_name='Was the sample collected for sick animal?')),
                ('sample_collected_dead', models.CharField(choices=[('Y', 'yes'), ('N', 'no')], default='Y', max_length=5, null=True, verbose_name='Was the sample collected from a dead animal?')),
                ('if_yes_sick', models.CharField(blank=True, max_length=100, null=True, verbose_name='If yes,state the signs shown by the cadaver')),
                ('findings', models.CharField(max_length=100, verbose_name='What was the laboratory findings?')),
                ('vet_name', models.CharField(max_length=12, verbose_name='Name of the Veterinary officer who collected the sample.')),
                ('laboratory_offficer', models.CharField(max_length=20, verbose_name='Name of the laboratory officer')),
                ('registration_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='Registration number')),
                ('Mobile_number', models.IntegerField(blank=True, null=True, verbose_name='Mobile number')),
                ('comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Livestock_Inventory_Form',
            fields=[
                ('vet_form', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='portals.vet_forms')),
                ('farmer_username', models.CharField(max_length=12, verbose_name='Farmer Username')),
                ('species_targeted', models.CharField(choices=[('0', 'cattle'), ('1', 'sheep'), ('2', 'goat'), ('3', 'donkey'), ('4', 'dog'), ('5', 'horse'), ('6', 'poultry'), ('7', 'others')], default='0', max_length=20, verbose_name='Species targetted')),
                ('name_of_the_animal', models.CharField(blank=True, max_length=30, null=True, verbose_name='Name or identification number')),
                ('number_of_the_male_animals', models.IntegerField(blank=True, default=1, null=True, verbose_name='Number of male animals')),
                ('number_of_the_female_animals', models.IntegerField(blank=True, default=1, null=True, verbose_name='Number of female animals')),
                ('number_of_live_animals', models.IntegerField(blank=True, default=1, null=True, verbose_name='Number of live animals')),
                ('number_of_dead_animals', models.IntegerField(blank=True, default=1, null=True, verbose_name='Number of dead animals')),
                ('specify_the_cause_of_the_dead', models.CharField(blank=True, max_length=100, null=True, verbose_name='Specify the cause of dead')),
                ('is_your_animals_insured', models.CharField(choices=[('Y', 'yes'), ('N', 'no')], default='Y', max_length=20, verbose_name='Has your animals been insured?')),
                ('if_yes_give_insuring_company', models.CharField(blank=True, max_length=100, null=True, verbose_name='If yes,give the insuring company')),
                ('date_of_culling', models.DateField(verbose_name='Date of culling')),
                ('give_reason_for_culling', models.CharField(blank=True, max_length=200, null=True, verbose_name='Give reason for culling')),
                ('comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Pregnancy_Diagnosis_Form',
            fields=[
                ('vet_form', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='portals.vet_forms')),
                ('farmer_username', models.CharField(max_length=12, verbose_name='Farmer Username')),
                ('cow_name', models.CharField(blank=True, max_length=20, null=True, verbose_name='Name or idenfication number of the cow')),
                ('cow_category', models.CharField(choices=[('A', 'Adult'), ('H', 'Heifer')], default='H', max_length=50, verbose_name='Cow`s category')),
                ('date_of_insemination', models.DateField(verbose_name='Date of insemination')),
                ('date_of_pregnancy_diagnosis', models.DateField(verbose_name='date of pregnancy diagnosis')),
                ('result_of_diagnosis', models.CharField(choices=[('P', 'positive'), ('N', 'Negative')], max_length=20, verbose_name='Results of diagnosis')),
                ('if_positive', models.CharField(blank=True, max_length=100, null=True, verbose_name='If the result is positive give the approximate age of the fetus.')),
                ('if_result_is_negative_give_observation', models.CharField(blank=True, max_length=100, null=True, verbose_name='If the result test negative give your observation')),
                ('next_date_of_pregnancy_diagnosis', models.DateField(verbose_name='Next date of pregnancy diagnosis')),
                ('expected_date_of_delivery', models.DateField(verbose_name='Expected date of delivery')),
                ('comment', models.CharField(blank=True, max_length=100, null=True, verbose_name='Comment')),
            ],
        ),
        migrations.CreateModel(
            name='Referral_Form',
            fields=[
                ('vet_form', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='portals.vet_forms')),
                ('farmer_username', models.CharField(max_length=12, verbose_name='Farmer Username')),
                ('Mobile_number', models.IntegerField(blank=True, null=True, verbose_name='Mobile number')),
                ('case_referal', models.CharField(choices=[('Y', 'yes'), ('N', 'no')], default='Y', max_length=20, verbose_name='Is the case referal to another vet?')),
                ('previous_treated', models.CharField(max_length=12, verbose_name='State the previous treated given')),
                ('state_prognosis', models.CharField(max_length=100, verbose_name='state the prognosis of the animal on referal.')),
                ('referal_date', models.DateField(verbose_name='referal date')),
                ('suggest_vet', models.CharField(choices=[('Y', 'yes'), ('N', 'no')], default='Y', max_length=20, verbose_name='Do you suggest a vet to be referred to?')),
                ('if_yes_leave_phone_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='If yes,write phone number of the vet')),
                ('registration_number', models.CharField(max_length=15, verbose_name='Registration number of the vet')),
                ('comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Sick_Approach_Form',
            fields=[
                ('vet_form', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='portals.vet_forms')),
                ('species_affected', models.CharField(blank=True, choices=[('0', 'cattle'), ('1', 'sheep'), ('2', 'goat'), ('3', 'donkey'), ('4', 'dog'), ('5', 'horse'), ('6', 'poultry'), ('7', 'others')], default='0', max_length=20, null=True, verbose_name='animal species affected')),
                ('num_of_species_affected', models.PositiveIntegerField(blank=True, null=True, verbose_name='number of species affected')),
                ('id_animal', models.CharField(blank=True, max_length=100, null=True, verbose_name='name of the animal/identification number')),
                ('disease_nature', models.CharField(blank=True, choices=[('A', 'acute'), ('S', 'sub_acute')], default='0', max_length=20, null=True, verbose_name='nature of the disease')),
                ('clinical_signs', models.CharField(max_length=100)),
                ('disease_diagnosis', models.CharField(blank=True, choices=[('C', 'clinical_signs'), ('L', 'laboratory')], default='0', max_length=20, null=True)),
                ('differential_diagnosis', models.CharField(blank=True, max_length=100, null=True)),
                ('final_diagnosis', models.CharField(blank=True, max_length=100, null=True)),
                ('sickness_duration', models.CharField(blank=True, max_length=100, null=True, verbose_name='duration of the sickness')),
                ('sickness_history', models.CharField(blank=True, max_length=300, null=True)),
                ('drug_of_choice', models.CharField(blank=True, max_length=100, null=True)),
                ('treatment_duration', models.CharField(blank=True, max_length=100, null=True)),
                ('start_dose_date', models.DateField()),
                ('prognosis', models.CharField(blank=True, choices=[('G', 'good'), ('F', 'fair'), ('P', 'poor')], default='G', max_length=20, null=True)),
                ('harmony_with_clinic_signs_and_lab', models.CharField(blank=True, choices=[('Y', 'yes'), ('N', 'no')], default='Y', max_length=5, null=True, verbose_name='were the pathological signs in harmony with the clinical signs and laboratory reports?')),
                ('cause_of_death_if_in_no_harmony', models.CharField(blank=True, max_length=100, null=True, verbose_name='If no, what could be the cause of the death')),
                ('disease_one_of_the_zoonotic', models.CharField(blank=True, choices=[('Y', 'yes'), ('N', 'no')], default='0', max_length=5, null=True, verbose_name='is the disease one of the zoonotic?')),
                ('advice_given_if_zoonotic', models.CharField(blank=True, max_length=100, null=True, verbose_name='if yes, what advice did you give the owner and people who handled the carcass')),
                ('relapse', models.CharField(choices=[('Y', 'yes'), ('N', 'no')], default='0', max_length=5, verbose_name='was there any relapse?')),
                ('cause_if_relapse', models.CharField(blank=True, max_length=100, null=True, verbose_name='if yes, what might be the cause')),
                ('comment', models.CharField(blank=True, max_length=300, null=True, verbose_name='comment')),
            ],
        ),
        migrations.CreateModel(
            name='Surgical_Approach_Form',
            fields=[
                ('vet_form', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='portals.vet_forms')),
                ('farmer_username', models.CharField(default='', max_length=12, verbose_name='Farmer Username')),
                ('species_operated_on', models.CharField(blank=True, choices=[('0', 'cattle'), ('1', 'sheep'), ('2', 'goat'), ('3', 'donkey'), ('4', 'dog'), ('5', 'horse'), ('6', 'poultry'), ('7', 'others')], default='0', max_length=20, null=True, verbose_name='Animal species affected')),
                ('sex_of_the_animal', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female')], default='', max_length=20, null=True, verbose_name='Sex of the animal')),
                ('name_of_the_animal', models.CharField(blank=True, max_length=30, null=True, verbose_name='Name or identification number')),
                ('operation_nature', models.CharField(blank=True, choices=[('C', 'c_section'), ('I', 'interstinal_torsion'), ('T', 'tumor_extraction'), ('C', 'canine_spaying'), ('H', 'hernia'), ('W', 'Warts_extraction'), ('C', 'castration'), ('S', 'skin_injuries'), ('F', 'fructure'), ('R', 'rumenatomy'), ('O', 'other')], default='C', max_length=20, null=True, verbose_name='Nature of operation')),
                ('if_other_specify', models.CharField(blank=True, max_length=100, null=True)),
                ('operation_date', models.DateField(blank=True, null=True, verbose_name='Date of Operation')),
                ('post_operation_management', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Post operation management')),
                ('prognosis', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Prognosis')),
                ('comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Vaccination_Form',
            fields=[
                ('vet_form', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='portals.vet_forms')),
                ('farmer_username', models.CharField(max_length=12, verbose_name='Farmer Username')),
                ('species_targeted', models.CharField(choices=[('0', 'cattle'), ('1', 'sheep'), ('2', 'goat'), ('3', 'donkey'), ('4', 'dog'), ('5', 'horse'), ('6', 'poultry'), ('7', 'others')], default='0', max_length=20, verbose_name='Animal species targetted')),
                ('if_other_specify', models.CharField(blank=True, max_length=100, null=True, verbose_name='If other specify')),
                ('number_of_animals_vaccinated', models.IntegerField(blank=True, default=1, null=True, verbose_name='Number of animals vaccinated.')),
                ('age_of_animal', models.PositiveIntegerField(blank=True, default=1, null=True, verbose_name='Age of animal')),
                ('sex_of_the_animal', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female')], default='M', max_length=20, null=True, verbose_name='Sex of the animal')),
                ('animal_breed', models.CharField(blank=True, max_length=100, null=True, verbose_name='Breed of the animal')),
                ('animal_colour', models.CharField(max_length=100, null=True, verbose_name='Colour of the animal')),
                ('other_description', models.CharField(blank=True, max_length=100, null=True, verbose_name='other description')),
                ('targetted_disease', models.CharField(max_length=20, null=True, verbose_name='The disease target')),
                ('vaccines_used', models.CharField(blank=True, max_length=100, null=True, verbose_name='Vaccine used')),
                ('date_of_vaccination', models.DateField(verbose_name='Date of vaccination')),
                ('next_date_of_vaccination', models.DateField(verbose_name='Next date of vaccination')),
                ('name_of_the_crush', models.CharField(blank=True, max_length=100, null=True, verbose_name='Name of the crush')),
                ('nature_of_the_vacination_program', models.CharField(choices=[('M', 'Mass_vaccination'), ('R', 'Ring_vaccination'), ('I', 'Individual')], default='M', max_length=200, verbose_name='Nature of the vaccination program')),
                ('comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Veterinary_Billing_Form',
            fields=[
                ('vet_form', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='portals.vet_forms')),
                ('farmer_username', models.CharField(max_length=12, verbose_name='Farmer Username')),
                ('farmer_location', models.CharField(blank=True, max_length=100, null=True, verbose_name='Location of the farmer.')),
                ('nature_of_problem', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nature of problem bill is done for.')),
                ('bill_paid', models.CharField(blank=True, max_length=100, null=True, verbose_name='Total amount billed.')),
                ('total_bill', models.CharField(blank=True, max_length=100, null=True, verbose_name='Total bill paid by the farmer.')),
                ('balance_due', models.CharField(blank=True, max_length=100, null=True, verbose_name='Balance due to be paid.')),
                ('agreed_date', models.DateField(blank=True, max_length=100, null=True, verbose_name='Agreed date of payment.')),
                ('suggest_payment', models.CharField(blank=True, choices=[('F', 'Full'), ('I', 'Instalments')], default='0', max_length=20, null=True, verbose_name='Suggest payment plan for the balance')),
                ('vet_name', models.CharField(max_length=12, verbose_name='Veterinary officer claiming the bill.')),
                ('registration_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='Registration number')),
                ('Mobile_number', models.IntegerField(blank=True, null=True, verbose_name='Mobile number')),
                ('comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='WeeklyMilkRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('week_start_date', models.DateField()),
                ('total_quantity', models.FloatField(help_text='Total milk in liters for the week')),
                ('cow_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portals.lactatingcow')),
            ],
        ),
    ]

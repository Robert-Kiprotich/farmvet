# Generated by Django 3.1.3 on 2021-12-30 16:55

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Vet_Forms',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vet_username', models.CharField(max_length=20)),
                ('is_sick_approach_form', models.BooleanField(default=False)),
                ('is_dead_approach_form', models.BooleanField(default=False)),
                ('is_surgical_approach_form', models.BooleanField(default=False)),
                ('is_deworming_form', models.BooleanField(default=False)),
                ('is_vaccination_form', models.BooleanField(default=False)),
                ('is_artificial_insemination_form', models.BooleanField(default=False)),
                ('is_calf_registration_form', models.BooleanField(default=False)),
                ('is_livestock_inventory_form', models.BooleanField(default=False)),
                ('is_farm_consultation', models.BooleanField(default=False)),
                ('is_pregnancy_diagnosis_form', models.BooleanField(default=False)),
                ('is_vet_billing_form', models.BooleanField(default=False)),
                ('is_lab_form', models.BooleanField(default=False)),
                ('report_created_on', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-report_created_on'],
            },
        ),
        migrations.CreateModel(
            name='Artificial_Insemination_Form',
            fields=[
                ('vet_form', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='portals.vet_forms')),
                ('farmer_username', models.CharField(max_length=12, verbose_name='Farmer Username')),
                ('Name_of_the_cow', models.CharField(max_length=12, verbose_name='Name of the cow or identification number of the cow')),
                ('time_of_heat_sign', models.TimeField(verbose_name='Time of heat sign')),
                ('date_of_insemination', models.DateField(verbose_name='Date of insemination')),
                ('time_of_insemination', models.TimeField(verbose_name='Time of insemination')),
                ('nature_of_the_breeding', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nature of breeding')),
                ('sire_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Sire`s name')),
                ('sire_origin', models.CharField(blank=True, max_length=200, null=True, verbose_name='Sire origin')),
                ('bull_code', models.CharField(blank=True, max_length=100, null=True, verbose_name='Bull code')),
                ('sex_of_the_calf_born', models.CharField(choices=[('M', 'male'), ('F', 'female')], default='M', max_length=20, verbose_name='Sex of the calf born')),
                ('date_of_birth', models.DateField(verbose_name='Date of birth')),
                ('nature_of_birth', models.CharField(choices=[('A', 'Alive'), ('D', 'Dead')], default='A', max_length=20, verbose_name='Nature of birth')),
                ('number_of_repeat', models.CharField(blank=True, max_length=100, null=True, verbose_name='Number of repeat')),
                ('abortion_rate', models.CharField(blank=True, max_length=100, null=True, verbose_name='Abortion rate')),
                ('reason_for_the_cause_of_abortion', models.CharField(blank=True, max_length=100, null=True, verbose_name='reason for abortion')),
                ('breed_used', models.CharField(blank=True, max_length=100, null=True, verbose_name='Breed used')),
                ('source_of_semen', models.CharField(blank=True, max_length=100, null=True, verbose_name='Source of the semen')),
                ('date_of_repeat_checked', models.DateField(verbose_name='Date of repeat check')),
                ('date_of_pregnancy_diagnosis', models.DateField(verbose_name='Date of pregnancy')),
                ('expected_date_of_calving', models.DateField(verbose_name='expected date of calving')),
                ('comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Calf_Registration_Form',
            fields=[
                ('vet_form', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='portals.vet_forms')),
                ('farmer_username', models.CharField(default='', max_length=12, verbose_name='Farmer Username')),
                ('date_of_birth', models.DateField(verbose_name='Date of birth')),
                ('sex_of_the_calf', models.CharField(choices=[('M', 'male'), ('F', 'female')], default='M', max_length=20, verbose_name='Sex of the calf')),
                ('birth_weight', models.IntegerField(verbose_name='Birth weight')),
                ('breed_of_the_calf', models.CharField(max_length=20, verbose_name='breed of the calf')),
                ('colour_of_the_breed', models.CharField(max_length=20, verbose_name='Colour of the breed')),
                ('status_of_the_calf', models.CharField(choices=[('H', 'Healthy'), ('D', 'Deformed')], default='H', max_length=100, verbose_name='Status of the calf')),
                ('breeching_level_of_the_calf', models.CharField(choices=[('F', 'First'), ('S', 'Second'), ('T', 'Third'), ('P', 'Pedegree')], default='F', max_length=100, verbose_name='Breeching level of the calf')),
                ('sire_details', models.CharField(blank=True, max_length=100, null=True)),
                ('expected_date_of_weaning', models.DateField(verbose_name='Expected date of weaning')),
                ('comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Death_Approach_Form',
            fields=[
                ('vet_form', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='portals.vet_forms')),
                ('farmer_username', models.CharField(max_length=12, verbose_name='Farmer Username')),
                ('name_of_the_animal', models.CharField(blank=True, max_length=30, null=True, verbose_name='Name or identification number')),
                ('sex_of_the_animal', models.CharField(blank=True, choices=[('M', 'male'), ('F', 'female')], default='', max_length=20, null=True, verbose_name='Sex of the animal')),
                ('num_of_species_dead', models.IntegerField(blank=True, default=1, null=True, verbose_name='Number of animals dead')),
                ('case_history', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('mortality_rate', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('death_date', models.DateField(blank=True, null=True, verbose_name='Date the animal died')),
                ('death_time', models.TimeField(blank=True, null=True, verbose_name='At what time the animal the animals died')),
                ('signs_of_cadever_on_the_ground', models.CharField(blank=True, max_length=200, null=True, verbose_name='What are the signs of signs of the cadever on the ground')),
                ('carcass_opened_for_the_pm', models.CharField(blank=True, choices=[('Y', 'yes'), ('N', 'no')], default='Y', max_length=5, null=True, verbose_name='Did you open up the carcass fo PM?')),
                ('if_yes_pathological_signs', models.CharField(blank=True, max_length=100, null=True, verbose_name='If yes,what were the signs of the pathological conditions?')),
                ('if_no_reason', models.CharField(blank=True, max_length=100, null=True, verbose_name='If no,what could have been the reason?')),
                ('sample_sent_lab', models.CharField(choices=[('Y', 'yes'), ('N', 'no')], default='Y', max_length=5, null=True, verbose_name='Did you send any sample to the laboratory?')),
                ('if_yes_lab_report', models.CharField(blank=True, max_length=100, null=True, verbose_name='if yes,what was the laboratory report?')),
                ('death_cause_notifiable', models.CharField(blank=True, choices=[('Y', 'yes'), ('N', 'no')], default='Y', max_length=5, null=True, verbose_name='Is the cause of dead notifiable?')),
                ('if_yes_message_to_relevant_body', models.CharField(blank=True, max_length=100, null=True, verbose_name='If yes,send message to the relevant body.')),
                ('intervention_regards_to_death', models.CharField(blank=True, max_length=100, null=True, verbose_name='What were the necessary intervention in regard to the cause of the dead')),
                ('comment', models.CharField(blank=True, max_length=300, null=True, verbose_name='comment')),
            ],
        ),
        migrations.CreateModel(
            name='Deworming_Form',
            fields=[
                ('vet_form', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='portals.vet_forms')),
                ('farmer_username', models.CharField(max_length=12, verbose_name='Farmer Username')),
                ('species_targeted', models.CharField(blank=True, choices=[('0', 'cattle'), ('1', 'sheep'), ('2', 'goat'), ('3', 'donkey'), ('4', 'dog'), ('5', 'horse'), ('6', 'poultry'), ('7', 'others')], default='0', max_length=20, null=True, verbose_name='Species targetted')),
                ('number_of_adults', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Number of adults')),
                ('number_of_young_ones', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Number of young ones')),
                ('body_condition_of_the_animal', models.CharField(blank=True, choices=[('G', 'good'), ('F', 'fair'), ('P', 'poor')], default='G', max_length=20, null=True, verbose_name='Body condition of the animal(s)')),
                ('date_of_deworming', models.DateField()),
                ('drug_choices', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Drug of choice')),
                ('target_parasites', models.CharField(blank=True, max_length=100, null=True, verbose_name='Target parasite')),
                ('withdrawal_period', models.CharField(blank=True, max_length=100, null=True)),
                ('side_effects', models.CharField(blank=True, max_length=100, null=True, verbose_name='Any side effect?')),
                ('next_date_deworming', models.DateField(verbose_name='Next date of deworming')),
                ('comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Farm_Consultation',
            fields=[
                ('vet_form', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='portals.vet_forms')),
                ('farmer_username', models.CharField(max_length=12, verbose_name='Farmer Username')),
                ('dairy_cows', models.CharField(blank=True, max_length=12, null=True, verbose_name='Dairy cows unit')),
                ('beef_production', models.CharField(blank=True, max_length=20, null=True, verbose_name='Beef production unit')),
                ('poultry', models.CharField(blank=True, max_length=30, null=True, verbose_name='Poultry production unit')),
                ('sheep', models.CharField(blank=True, max_length=50, null=True, verbose_name='Sheep production unit')),
                ('goat', models.CharField(blank=True, max_length=100, null=True, verbose_name='Goat production unit')),
                ('canine', models.CharField(blank=True, max_length=100, null=True, verbose_name='Canine keeping')),
                ('other', models.CharField(blank=True, max_length=100, null=True, verbose_name='Other livestock')),
                ('give_recommendation', models.CharField(blank=True, max_length=100, null=True, verbose_name='Give recommendation.')),
                ('grazing', models.CharField(blank=True, max_length=200, null=True, verbose_name='Grazing system and pasture management.')),
                ('disease', models.CharField(blank=True, max_length=100, null=True, verbose_name='Disease control.')),
                ('farm', models.CharField(blank=True, max_length=100, null=True, verbose_name='Farm biosecurity')),
                ('culling_selection', models.CharField(blank=True, max_length=100, null=True, verbose_name='Culling and Selection.')),
                ('farm_manager', models.CharField(choices=[('V', 'Veterinary Officer'), ('L', 'Livestock Officer'), ('N', 'None')], default='', max_length=20, verbose_name='Is the farm managed by a veterinary officer or livestock officer?')),
                ('if_no', models.CharField(blank=True, max_length=100, null=True, verbose_name='If none,who is the farm consultant?')),
                ('name_incharge', models.CharField(blank=True, max_length=100, null=True, verbose_name='Name of the veterinary officer incharge.')),
                ('reg_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='Registration number.')),
                ('comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Laboratory_Form',
            fields=[
                ('vet_form', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='portals.vet_forms')),
                ('farmer_username', models.CharField(max_length=12, verbose_name='Farmer Username')),
                ('category_ssp', models.CharField(max_length=12, verbose_name='Category of the spp')),
                ('sample', models.CharField(max_length=12, verbose_name='Samples collected')),
                ('name_animal', models.CharField(max_length=12, verbose_name='Namer of the animal')),
                ('date_of_submission', models.DateField(verbose_name='Date of submission')),
                ('idenfication', models.IntegerField(blank=True, null=True, verbose_name='ID number')),
                ('storage', models.CharField(max_length=100, verbose_name='Method of storage')),
                ('transportation', models.CharField(max_length=200, verbose_name='Transportation means')),
                ('expected_duration', models.CharField(max_length=100, verbose_name='Expected duration of the sampling process')),
                ('sample_collected_sick_animal', models.CharField(choices=[('Y', 'yes'), ('N', 'no')], default='Y', max_length=5, null=True, verbose_name='Was the sample collected for sick animal?')),
                ('sample_collected_dead', models.CharField(choices=[('Y', 'yes'), ('N', 'no')], default='Y', max_length=5, null=True, verbose_name='Was the sample collected from a dead animal?')),
                ('if_yes_sick', models.CharField(blank=True, max_length=100, null=True, verbose_name='If yes,state the signs shown by the cadaver')),
                ('findings', models.CharField(max_length=100, verbose_name='What was the laboratory findings?')),
                ('vet_name', models.CharField(max_length=12, verbose_name='Name of the Veterinary officer who collected the sample.')),
                ('laboratory_offficer', models.CharField(max_length=20, verbose_name='Name of the laboratory officer')),
                ('registration_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='Registration number')),
                ('Mobile_number', models.IntegerField(blank=True, null=True, verbose_name='Mobile number')),
                ('comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Livestock_Inventory_Form',
            fields=[
                ('vet_form', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='portals.vet_forms')),
                ('farmer_username', models.CharField(max_length=12, verbose_name='Farmer Username')),
                ('species_targeted', models.CharField(choices=[('0', 'cattle'), ('1', 'sheep'), ('2', 'goat'), ('3', 'donkey'), ('4', 'dog'), ('5', 'horse'), ('6', 'poultry'), ('7', 'others')], default='0', max_length=20, verbose_name='Species targetted')),
                ('name_of_the_animal', models.CharField(blank=True, max_length=30, null=True, verbose_name='Name or identification number')),
                ('number_of_the_male_animals', models.IntegerField(blank=True, default=1, null=True, verbose_name='Number of male animals')),
                ('number_of_the_female_animals', models.IntegerField(blank=True, default=1, null=True, verbose_name='Number of female animals')),
                ('number_of_live_animals', models.IntegerField(blank=True, default=1, null=True, verbose_name='Number of live animals')),
                ('number_of_dead_animals', models.IntegerField(blank=True, default=1, null=True, verbose_name='Number of dead animals')),
                ('specify_the_cause_of_the_dead', models.CharField(blank=True, max_length=100, null=True, verbose_name='Specify the cause of dead')),
                ('is_your_animals_insured', models.CharField(choices=[('Y', 'yes'), ('N', 'no')], default='Y', max_length=20, verbose_name='Has your animals been insured?')),
                ('if_yes_give_insuring_company', models.CharField(blank=True, max_length=100, null=True, verbose_name='If yes,give the insuring company')),
                ('date_of_culling', models.DateField(verbose_name='Date of culling')),
                ('give_reason_for_culling', models.CharField(blank=True, max_length=200, null=True, verbose_name='Give reason for culling')),
                ('comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Pregnancy_Diagnosis_Form',
            fields=[
                ('vet_form', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='portals.vet_forms')),
                ('farmer_username', models.CharField(max_length=12, verbose_name='Farmer Username')),
                ('cow_name', models.CharField(blank=True, max_length=20, null=True, verbose_name='Name or idenfication number of the cow')),
                ('cow_category', models.CharField(choices=[('A', 'Adult'), ('H', 'Heifer')], default='H', max_length=50, verbose_name='Cow`s category')),
                ('date_of_insemination', models.DateField(verbose_name='Date of insemination')),
                ('date_of_pregnancy_diagnosis', models.DateField(verbose_name='date of pregnancy diagnosis')),
                ('result_of_diagnosis', models.CharField(choices=[('P', 'positive'), ('N', 'Negative')], max_length=20, verbose_name='Results of diagnosis')),
                ('if_positive', models.CharField(blank=True, max_length=100, null=True, verbose_name='If the result is positive give the approximate age of the fetus.')),
                ('if_result_is_negative_give_observation', models.CharField(blank=True, max_length=100, null=True, verbose_name='If the result test negative give your observation')),
                ('next_date_of_pregnancy_diagnosis', models.DateField(verbose_name='Next date of pregnancy diagnosis')),
                ('expected_date_of_delivery', models.DateField(verbose_name='Expected date of delivery')),
                ('comment', models.CharField(blank=True, max_length=100, null=True, verbose_name='Comment')),
            ],
        ),
        migrations.CreateModel(
            name='Sick_Approach_Form',
            fields=[
                ('vet_form', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='portals.vet_forms')),
                ('farmer_username', models.CharField(max_length=12, verbose_name='Farmer Username')),
                ('species_affected', models.CharField(blank=True, choices=[('0', 'cattle'), ('1', 'sheep'), ('2', 'goat'), ('3', 'donkey'), ('4', 'dog'), ('5', 'horse'), ('6', 'poultry'), ('7', 'others')], default='0', max_length=20, null=True, verbose_name='animal species affected')),
                ('num_of_species_affected', models.PositiveIntegerField(blank=True, null=True, verbose_name='number of species affected')),
                ('id_animal', models.CharField(blank=True, max_length=100, null=True, verbose_name='name of the animal/identification number')),
                ('disease_nature', models.CharField(blank=True, choices=[('A', 'acute'), ('S', 'sub_acute')], default='0', max_length=20, null=True, verbose_name='nature of the disease')),
                ('clinical_signs', models.CharField(max_length=100)),
                ('disease_diagnosis', models.CharField(blank=True, choices=[('C', 'clinical_signs'), ('L', 'laboratory')], default='0', max_length=20, null=True)),
                ('differential_diagnosis', models.CharField(blank=True, max_length=100, null=True)),
                ('final_diagnosis', models.CharField(blank=True, max_length=100, null=True)),
                ('sickness_duration', models.CharField(blank=True, max_length=100, null=True, verbose_name='duration of the sickness')),
                ('sickness_history', models.CharField(blank=True, max_length=300, null=True)),
                ('drug_of_choice', models.CharField(blank=True, max_length=100, null=True)),
                ('treatment_duration', models.CharField(blank=True, max_length=100, null=True)),
                ('start_dose_date', models.DateField()),
                ('prognosis', models.CharField(blank=True, choices=[('G', 'good'), ('F', 'fair'), ('P', 'poor')], default='G', max_length=20, null=True)),
                ('harmony_with_clinic_signs_and_lab', models.CharField(blank=True, choices=[('Y', 'yes'), ('N', 'no')], default='Y', max_length=5, null=True, verbose_name='were the pathological signs in harmony with the clinical signs and laboratory reports?')),
                ('cause_of_death_if_in_no_harmony', models.CharField(blank=True, max_length=100, null=True, verbose_name='If no, what could be the cause of the death')),
                ('disease_one_of_the_zoonotic', models.CharField(blank=True, choices=[('Y', 'yes'), ('N', 'no')], default='0', max_length=5, null=True, verbose_name='is the disease one of the zoonotic?')),
                ('advice_given_if_zoonotic', models.CharField(blank=True, max_length=100, null=True, verbose_name='if yes, what advice did you give the owner and people who handled the carcass')),
                ('relapse', models.CharField(choices=[('Y', 'yes'), ('N', 'no')], default='0', max_length=5, verbose_name='was there any relapse?')),
                ('cause_if_relapse', models.CharField(blank=True, max_length=100, null=True, verbose_name='if yes, what might be the cause')),
                ('comment', models.CharField(blank=True, max_length=300, null=True, verbose_name='comment')),
            ],
        ),
        migrations.CreateModel(
            name='Surgical_Approach_Form',
            fields=[
                ('vet_form', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='portals.vet_forms')),
                ('farmer_username', models.CharField(default='', max_length=12, verbose_name='Farmer Username')),
                ('species_operated_on', models.CharField(blank=True, choices=[('0', 'cattle'), ('1', 'sheep'), ('2', 'goat'), ('3', 'donkey'), ('4', 'dog'), ('5', 'horse'), ('6', 'poultry'), ('7', 'others')], default='0', max_length=20, null=True, verbose_name='Animal species affected')),
                ('sex_of_the_animal', models.CharField(blank=True, choices=[('M', 'male'), ('F', 'female')], default='', max_length=20, null=True, verbose_name='Sex of the animal')),
                ('name_of_the_animal', models.CharField(blank=True, max_length=30, null=True, verbose_name='Name or identification number')),
                ('operation_nature', models.CharField(blank=True, choices=[('C', 'c_section'), ('I', 'interstinal_torsion'), ('T', 'tumor_extraction'), ('C', 'canine_spaying'), ('H', 'hernia'), ('W', 'Warts_extraction'), ('C', 'castration'), ('S', 'skin_injuries'), ('F', 'fructure'), ('R', 'rumenatomy'), ('O', 'other')], default='C', max_length=20, null=True, verbose_name='Nature of operation')),
                ('if_other_specify', models.CharField(blank=True, max_length=100, null=True)),
                ('operation_date', models.DateField(blank=True, null=True, verbose_name='Date of Operation')),
                ('post_operation_management', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Post operation management')),
                ('prognosis', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Prognosis')),
                ('comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Vaccination_Form',
            fields=[
                ('vet_form', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='portals.vet_forms')),
                ('farmer_username', models.CharField(max_length=12, verbose_name='Farmer Username')),
                ('species_targeted', models.CharField(choices=[('0', 'cattle'), ('1', 'sheep'), ('2', 'goat'), ('3', 'donkey'), ('4', 'dog'), ('5', 'horse'), ('6', 'poultry'), ('7', 'others')], default='0', max_length=20, verbose_name='Animal species targetted')),
                ('if_other_specify', models.CharField(blank=True, max_length=100, null=True, verbose_name='If other specify')),
                ('number_of_animals_vaccinated', models.IntegerField(blank=True, default=1, null=True, verbose_name='Number of animals vaccinated.')),
                ('age_of_animal', models.PositiveIntegerField(blank=True, default=1, null=True, verbose_name='Age of animal')),
                ('sex_of_the_animal', models.CharField(blank=True, choices=[('M', 'male'), ('F', 'female')], default='M', max_length=20, null=True, verbose_name='Sex of the animal')),
                ('animal_breed', models.CharField(blank=True, max_length=100, null=True, verbose_name='Breed of the animal')),
                ('animal_colour', models.CharField(max_length=100, null=True, verbose_name='Colour of the animal')),
                ('other_description', models.CharField(blank=True, max_length=100, null=True, verbose_name='other description')),
                ('targetted_disease', models.CharField(max_length=20, null=True, verbose_name='The disease target')),
                ('vaccines_used', models.CharField(blank=True, max_length=100, null=True, verbose_name='Vaccine used')),
                ('date_of_vaccination', models.DateField(verbose_name='Date of vaccination')),
                ('next_date_of_vaccination', models.DateField(verbose_name='Next date of vaccination')),
                ('name_of_the_crush', models.CharField(blank=True, max_length=100, null=True, verbose_name='Name of the crush')),
                ('nature_of_the_vacination_program', models.CharField(choices=[('M', 'Mass_vaccination'), ('R', 'Ring_vaccination'), ('I', 'Individual')], default='M', max_length=200, verbose_name='Nature of the vaccination program')),
                ('comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Veterinary_Billing_Form',
            fields=[
                ('vet_form', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='portals.vet_forms')),
                ('farmer_username', models.CharField(max_length=12, verbose_name='Farmer Username')),
                ('farmer_location', models.CharField(blank=True, max_length=100, null=True, verbose_name='Location of the farmer.')),
                ('nature_of_problem', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nature of problem bill is done for.')),
                ('bill_paid', models.CharField(blank=True, max_length=100, null=True, verbose_name='Total amount billed.')),
                ('total_bill', models.CharField(blank=True, max_length=100, null=True, verbose_name='Total bill paid by the farmer.')),
                ('balance_due', models.CharField(blank=True, max_length=100, null=True, verbose_name='Balance due to be paid.')),
                ('agreed_date', models.DateField(blank=True, max_length=100, null=True, verbose_name='Agreed date of payment.')),
                ('suggest_payment', models.CharField(blank=True, choices=[('F', 'Full'), ('I', 'Instalments')], default='0', max_length=20, null=True, verbose_name='Suggest payment plan for the balance')),
                ('vet_name', models.CharField(max_length=12, verbose_name='Veterinary officer claiming the bill.')),
                ('registration_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='Registration number')),
                ('Mobile_number', models.IntegerField(blank=True, null=True, verbose_name='Mobile number')),
                ('comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
    ]

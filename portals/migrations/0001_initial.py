# Generated by Django 4.2.17 on 2025-02-20 22:43

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AnimalSale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_sold', models.IntegerField()),
                ('name', models.CharField(max_length=100)),
                ('reg_no', models.CharField(max_length=100)),
                ('date_sold', models.DateField()),
                ('age', models.IntegerField()),
                ('breed', models.CharField(choices=[('Dog', [('Labrador Retriever', 'Labrador Retriever'), ('German Shepherd', 'German Shepherd'), ('Golden Retriever', 'Golden Retriever'), ('Bulldog', 'Bulldog'), ('Beagle', 'Beagle'), ('Poodle', 'Poodle'), ('Boxer', 'Boxer'), ('Dachshund', 'Dachshund'), ('Yorkshire Terrier', 'Yorkshire Terrier'), ('Rottweiler', 'Rottweiler')]), ('Cat', [('Siamese', 'Siamese'), ('Persian', 'Persian'), ('Maine Coon', 'Maine Coon'), ('Ragdoll', 'Ragdoll'), ('British Shorthair', 'British Shorthair'), ('Sphynx', 'Sphynx'), ('Bengal', 'Bengal'), ('Abyssinian', 'Abyssinian'), ('Scottish Fold', 'Scottish Fold'), ('Burmese', 'Burmese')]), ('Horse', [('Thoroughbred', 'Thoroughbred'), ('Quarter Horse', 'Quarter Horse'), ('Arabian', 'Arabian'), ('Appaloosa', 'Appaloosa'), ('Paint Horse', 'Paint Horse'), ('Morgan', 'Morgan'), ('Tennessee Walking Horse', 'Tennessee Walking Horse'), ('Friesian', 'Friesian'), ('Pony of the Americas', 'Pony of the Americas'), ('Miniature Horse', 'Miniature Horse')]), ('Cattle', [('Angus', 'Angus'), ('Hereford', 'Hereford'), ('Charolais', 'Charolais'), ('Simmental', 'Simmental'), ('Limousin', 'Limousin'), ('Texas Longhorn', 'Texas Longhorn'), ('Holstein', 'Holstein'), ('Jersey', 'Jersey'), ('Gelbvieh', 'Gelbvieh'), ('Brahman', 'Brahman')]), ('Sheep', [('Merino', 'Merino'), ('Dorper', 'Dorper'), ('Suffolk', 'Suffolk'), ('Rambouillet', 'Rambouillet'), ('Hampshire', 'Hampshire'), ('Shropshire', 'Shropshire'), ('Dorset', 'Dorset'), ('Cotswold', 'Cotswold'), ('Lincoln', 'Lincoln'), ('Targhee', 'Targhee')]), ('Goat', [('Boer', 'Boer'), ('Nubian', 'Nubian'), ('Saanen', 'Saanen'), ('Angora', 'Angora'), ('LaMancha', 'LaMancha'), ('Alpine', 'Alpine'), ('Toggenburg', 'Toggenburg'), ('Kiko', 'Kiko'), ('Spanish', 'Spanish'), ('Pygmy', 'Pygmy')])], default='', max_length=100)),
                ('sex', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=10)),
                ('weight', models.DecimalField(decimal_places=2, max_digits=10)),
                ('selling_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('reason', models.TextField()),
                ('comment', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Archaricides',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_purchase', models.DateField(verbose_name='Date of Purchase')),
                ('chemical_name', models.CharField(max_length=50, verbose_name='Chemical Name')),
                ('trade_name', models.CharField(max_length=50, verbose_name='Chemical Name')),
                ('quantity', models.CharField(max_length=255, verbose_name='Quantity')),
                ('company', models.CharField(max_length=255, verbose_name='Company')),
                ('application_rate', models.CharField(max_length=255, verbose_name='Rate')),
                ('expiry_date', models.DateField(verbose_name='Expiry Date')),
                ('times_used', models.CharField(max_length=255, verbose_name='Frequency')),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Cost')),
                ('comment', models.TextField(blank=True, verbose_name='Comment')),
            ],
        ),
        migrations.CreateModel(
            name='ArtificialInsemination',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('farm_name', models.CharField(max_length=255)),
                ('species', models.CharField(choices=[('Cattle', 'Cattle'), ('Sheep', 'Sheep'), ('Goat', 'Goat'), ('Donkey', 'Donkey'), ('Dog', 'Dog'), ('Horse', 'Horse'), ('Poultry', 'Poultry'), ('Other', 'Other')], max_length=10)),
                ('cow_name', models.CharField(max_length=255)),
                ('reg_no', models.CharField(max_length=255)),
                ('dam_details', models.TextField()),
                ('sire_details', models.TextField()),
                ('no_of_repeats', models.IntegerField()),
                ('rab_status', models.CharField(choices=[('Manual Removal', 'Manual Removal'), ('Natural Expulsion', 'Natural Expulsion')], max_length=20)),
                ('abortion_status', models.CharField(choices=[('YES', 'Yes'), ('NO', 'No')], max_length=3)),
                ('time_of_heat_sign', models.TimeField()),
                ('date_of_heat_sign', models.DateField()),
                ('insemination_date', models.DateField()),
                ('insemination_time', models.TimeField()),
                ('insemination_status', models.CharField(choices=[('First', 'First'), ('Repeat', 'Repeat')], max_length=20)),
                ('semen_type', models.CharField(choices=[('Conventional', 'Conventional'), ('Sexed', 'Sexed')], max_length=20)),
                ('breed_used', models.CharField(choices=[('Holstein', 'Holstein'), ('Jersey', 'Jersey'), ('Angus', 'Angus'), ('Hereford', 'Hereford'), ('Simmental', 'Simmental'), ('Brahman', 'Brahman'), ('Charolais', 'Charolais'), ('Limousin', 'Limousin'), ('Guernsey', 'Guernsey'), ('Ayrshire', 'Ayrshire'), ('Brown Swiss', 'Brown Swiss'), ('Shorthorn', 'Shorthorn'), ('Other', 'Other')], max_length=25)),
                ('other_breed', models.CharField(max_length=255)),
                ('bull_name', models.CharField(max_length=255)),
                ('bull_reg_no', models.CharField(max_length=255)),
                ('semen_source', models.CharField(choices=[('KAGRC', 'KAGRC'), ('ADC', 'ADC'), ('CRV', 'CRV'), ('WW Sires', 'WW Sires'), ('Semex Alliance', 'Semex Alliance'), ('Alta Genetic', 'Alta Genetic'), ('CRI', 'CRI'), ('Other', 'Other')], max_length=25)),
                ('other_source', models.CharField(max_length=255)),
                ('heat_sign_mtr_date', models.DateField()),
                ('repeat_heat_date', models.DateField()),
                ('first_pd_date', models.DateField()),
                ('expected_delivery_date', models.DateField()),
                ('owners_name', models.CharField(max_length=255)),
                ('sub_county', models.CharField(max_length=25)),
                ('ward', models.CharField(max_length=25)),
                ('village', models.CharField(max_length=255)),
                ('contact', models.CharField(max_length=15)),
                ('provided_by', models.CharField(max_length=255)),
                ('vet_name', models.CharField(max_length=255)),
                ('vet_category', models.CharField(choices=[('surgeon', 'Surgeon'), ('technologist', 'Technologist'), ('technician', 'Technician')], max_length=30)),
                ('vet_reg_no', models.CharField(max_length=254)),
                ('vet_contact', models.CharField(max_length=15)),
                ('signature_stamp', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AssessmentRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('livestock_category', models.CharField(choices=[('Cattle', 'Cattle'), ('Sheep', 'Sheep'), ('Goat', 'Goat'), ('Dog', 'Dog'), ('Cat', 'Cat'), ('Horse', 'Horse'), ('None', 'None')], max_length=20)),
                ('other_category', models.CharField(blank=True, max_length=50, null=True)),
                ('breed', models.CharField(max_length=50)),
                ('date_of_assessment', models.DateField()),
                ('name_of_animal', models.CharField(max_length=100)),
                ('registration_number', models.CharField(max_length=50)),
                ('color_of_animal', models.CharField(max_length=50)),
                ('age_of_animal', models.PositiveIntegerField()),
                ('sex_of_animal', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=10)),
                ('number_of_animals', models.PositiveIntegerField()),
                ('origin_of_animal', models.CharField(max_length=100)),
                ('place_of_assessment', models.CharField(choices=[('Farm', 'Farm'), ('Market', 'Market')], max_length=20)),
                ('destination', models.CharField(max_length=100)),
                ('reason_for_assessment', models.CharField(choices=[('Slaughter', 'Slaughter'), ('Breeding', 'Breeding'), ('Culling', 'Culling'), ('Disease Control', 'Disease Control'), ('Sales', 'Sales'), ('For Complaint', 'For Complaint'), ('Theft Cases', 'Theft Cases'), ('For Export', 'For Export'), ('Elective Surgery', 'Elective Surgery')], max_length=50)),
                ('recommendation', models.TextField(blank=True, null=True)),
                ('owner_of_animal', models.CharField(max_length=100)),
                ('owner_mobile_number', models.CharField(max_length=15)),
                ('veterinary_practitioner_in_charge', models.CharField(max_length=100)),
                ('practitioner_registration_number', models.CharField(max_length=50)),
                ('practitioner_contact', models.CharField(max_length=15)),
                ('signature_and_stamp', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Attempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField()),
                ('attempt_number', models.IntegerField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Butcher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrollment_date', models.DateField()),
                ('name', models.CharField(max_length=255)),
                ('id_number', models.CharField(max_length=100)),
                ('mobile_number', models.CharField(max_length=15)),
                ('medical_license_status', models.CharField(choices=[('updated', 'Updated'), ('not_updated', 'Not Updated')], max_length=50)),
                ('livestock_slaughtered', models.CharField(max_length=50)),
                ('meat_container_number', models.CharField(max_length=50)),
                ('meat_carrier_number', models.CharField(max_length=50)),
                ('means_of_transport', models.CharField(choices=[('motorbike', 'Motorbike'), ('vehicle', 'Vehicle')], max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Calf',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_given', models.CharField(default='', max_length=100)),
                ('registration_number', models.CharField(default='', max_length=100, unique=True)),
                ('dam_details', models.CharField(default='', max_length=100)),
                ('birth_date', models.DateField()),
                ('breed', models.CharField(default='', max_length=100)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], default='', max_length=10)),
                ('sire_details', models.CharField(default='', max_length=100)),
                ('color', models.CharField(default='', max_length=100)),
                ('birth_weight', models.FloatField()),
                ('medical_conditions', models.CharField(blank=True, default='', max_length=100)),
                ('registration_date', models.DateField(blank=True, null=True)),
                ('expected_weaning', models.DateField(blank=True, null=True)),
                ('breeding_level', models.CharField(choices=[('Purebred', 'Purebred'), ('Crossbred', 'Crossbred'), ('MixedBreed', 'MixedBreed')], default='Purebreed', max_length=100)),
                ('comments', models.CharField(blank=True, default='', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='CalvingRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_calving', models.DateField()),
                ('insemination_date', models.DateField(blank=True, null=True)),
                ('days_to_calving_down', models.PositiveIntegerField(help_text='Number of days to calving down')),
                ('cow_name', models.CharField(max_length=100)),
                ('registration_number', models.CharField(blank=True, max_length=50, null=True)),
                ('calving_procedure', models.CharField(choices=[('Normal', 'Normal'), ('Assisted', 'Assisted'), ('C-Section', 'C-Section')], max_length=20)),
                ('rab_status', models.CharField(choices=[('Natural Expulsion', 'Natural Expulsion'), ('Manual Removal', 'Manual Removal')], max_length=20)),
                ('hours_for_natural_expulsion', models.CharField(blank=True, max_length=100, null=True)),
                ('calf_sex', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=6)),
                ('calf_status', models.CharField(choices=[('Live', 'Live'), ('Dead', 'Dead')], max_length=10)),
                ('reason_for_dead_foetus', models.CharField(blank=True, choices=[('Delayed Labour', 'Delayed Labour'), ('Breech Presentation', 'Breech Presentation'), ('None', 'None')], max_length=50, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_enrollment', models.DateField()),
                ('full_name', models.CharField(max_length=255)),
                ('mobile_number', models.CharField(max_length=15)),
                ('location', models.CharField(max_length=255)),
                ('livestock_interest', models.TextField(blank=True, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ClientRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('farmer_name', models.CharField(max_length=100)),
                ('contact', models.CharField(max_length=13)),
                ('location', models.CharField(max_length=100)),
                ('date_of_request', models.DateField(blank=True, null=True)),
                ('time_of_request', models.TimeField(blank=True, null=True)),
                ('request_type', models.CharField(choices=[('Emergency', 'Emergency'), ('Non Emergency', 'Non Emergency')], max_length=15)),
                ('emergency_condition', models.CharField(blank=True, choices=[('severe_bleeding', 'Severe Bleeding'), ('dystocia', 'Dystocia'), ('bloat', 'Bloat'), ('snake bite', 'Snake Bite'), ('fracture', 'Fracture'), ('uterine prolapse', 'Uterine Prolapse'), ('choking', 'Choking'), ('milk fever', 'Milk Fever'), ('none', 'None')], max_length=50, null=True)),
                ('livestock_category', models.CharField(choices=[('Cattle', 'Cattle'), ('Sheep', 'Sheep'), ('Goat', 'Goat'), ('Donkey', 'Donkey'), ('Dog', 'Dog'), ('Cat', 'Cat'), ('Poultry', 'Poultry'), ('Horse', 'Horse'), ('None', 'None')], max_length=20)),
                ('other_livestock_category', models.CharField(blank=True, max_length=255, null=True)),
                ('consultation_fee', models.DecimalField(decimal_places=2, max_digits=10)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='livestock_photos/')),
                ('consent', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ClinicalRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('animal_species_affected', models.CharField(choices=[('Cattle', 'Cattle'), ('Sheep', 'Sheep'), ('Goat', 'Goat'), ('Donkey', 'Donkey'), ('Dog', 'Dog'), ('Cat', 'Cat'), ('Horse', 'Horse'), ('Poultry', 'Poultry'), ('Other', 'Other')], max_length=20)),
                ('other_species', models.CharField(blank=True, max_length=100, null=True)),
                ('name_of_animal_affected', models.CharField(max_length=100)),
                ('registration_number', models.CharField(max_length=100)),
                ('age_of_animal', models.CharField(max_length=20)),
                ('breed_of_animal', models.CharField(max_length=100)),
                ('nature_of_disease', models.CharField(choices=[('Acute', 'Acute'), ('Sub-acute', 'Sub-acute'), ('Chronic', 'Chronic')], max_length=20)),
                ('case_history', models.TextField()),
                ('refer_case_to_other_vet', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3)),
                ('clinical_signs', models.TextField()),
                ('prognosis', models.CharField(choices=[('good', 'Good'), ('poor', 'Poor'), ('fair', 'Fair'), ('grave', 'Grave')], max_length=20)),
                ('differential_diagnosis', models.TextField()),
                ('final_diagnosis', models.TextField()),
                ('treatment_plan', models.TextField()),
                ('drugs_of_choice', models.TextField()),
                ('date_of_start_dose', models.DateField()),
                ('final_treatment_date', models.DateField(blank=True, null=True)),
                ('is_zoonotic', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3)),
                ('precautions', models.TextField(blank=True, null=True)),
                ('is_disease_notifiable', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3)),
                ('notified_authority', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3)),
                ('comment', models.TextField(blank=True, null=True)),
                ('owner_name', models.CharField(max_length=100)),
                ('owner_village', models.CharField(max_length=100)),
                ('owner_contact', models.CharField(max_length=15)),
                ('provided_by', models.CharField(max_length=255)),
                ('vet_in_charge_name', models.CharField(max_length=100)),
                ('vet_category', models.CharField(choices=[('surgeon', 'Surgeon'), ('technologist', 'Technologist'), ('technician', 'Technician')], max_length=30)),
                ('vet_registration_number', models.CharField(max_length=100)),
                ('vet_contact', models.CharField(max_length=15)),
                ('vet_signature', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='CpdChoices',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choice_text', models.CharField(max_length=255)),
                ('is_correct', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='CpdQuestions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Creditor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_transaction', models.DateField()),
                ('name', models.CharField(max_length=255)),
                ('mobile_number', models.CharField(max_length=15)),
                ('total_amount_to_pay', models.DecimalField(decimal_places=2, max_digits=10)),
                ('amount_paid', models.DecimalField(decimal_places=2, max_digits=10)),
                ('balance_to_pay', models.DecimalField(decimal_places=2, max_digits=10)),
                ('agreed_date_of_balance_payment', models.DateField()),
                ('remarks', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Culling',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100)),
                ('reg_no', models.CharField(default='', max_length=100, unique=True)),
                ('age', models.CharField(default='', max_length=100)),
                ('gender', models.CharField(default='', max_length=100)),
                ('animal_type', models.CharField(choices=[('Cow', 'Cow'), ('Sheep', 'Sheep'), ('Goat', 'Goat')], default='', max_length=100)),
                ('breed', models.CharField(default='', max_length=100)),
                ('culling_method', models.CharField(choices=[('Killing', 'Killing'), ('Selling', 'Selling')], default='', max_length=100)),
                ('no_of_culled', models.FloatField(default=0)),
                ('culling_reason', models.CharField(choices=[('Disease', 'Disease'), ('Old age', 'Old age'), ('Poor performance', 'Poor performance'), ('Genetic defects', 'Genetic defects'), ('Other', 'Other')], default='', max_length=100)),
                ('culling_date', models.DateField()),
                ('culling_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('comment', models.TextField(blank=True, default='', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_enrollment', models.DateField()),
                ('name', models.CharField(max_length=100)),
                ('mobile_number', models.CharField(max_length=15)),
                ('location', models.CharField(max_length=100)),
                ('remarks', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='DailyKill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('livestock_category', models.CharField(choices=[('Bovine', 'Bovine'), ('Caprine', 'Caprine'), ('Ovine', 'Ovine'), ('Porcine', 'Porcine'), ('Camel', 'Camel'), ('Poultry', 'Poultry')], max_length=50)),
                ('total_kills_per_day', models.PositiveIntegerField()),
                ('condemnation_done', models.CharField(max_length=30)),
                ('condemnation_status', models.CharField(blank=True, choices=[('Local Condemnation', 'Local Condemnation'), ('Carcass Condemnation', 'Carcass Condemnation'), ('Passed For Consumption', 'Passed For Consumption'), ('none', 'None')], max_length=50, null=True)),
                ('comment_by_inspector', models.TextField(blank=True, null=True)),
                ('inspector_name', models.CharField(max_length=100)),
                ('inspector_reg_number', models.CharField(max_length=50)),
                ('inspector_status', models.CharField(choices=[('Employed', 'Employed'), ('Delegated', 'Delegated'), ('Intern/Student', 'Intern/Student')], max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='DailyMilkRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True)),
                ('time', models.TimeField(blank=True, null=True)),
                ('total_quantity', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DairyEquipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, verbose_name='Name')),
                ('date_of_purchase', models.DateField(verbose_name='Date of Purchase')),
                ('quantity', models.CharField(max_length=255, verbose_name='quantity')),
                ('equipment_type', models.CharField(max_length=255, verbose_name='Type')),
                ('model_number', models.CharField(max_length=255, verbose_name='Model Number')),
                ('company', models.CharField(max_length=255, verbose_name='Company')),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Cost')),
                ('source', models.CharField(max_length=255, verbose_name='Source')),
                ('comment', models.TextField(blank=True, verbose_name='Comment')),
            ],
        ),
        migrations.CreateModel(
            name='DairyHygiene',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chemical_name', models.CharField(max_length=255, verbose_name='Chemical Name')),
                ('trade_name', models.CharField(max_length=255, verbose_name='Trade Name')),
                ('date_of_purchase', models.DateField(verbose_name='Date of Purchase')),
                ('item_purchased', models.CharField(max_length=255, verbose_name='Item')),
                ('company', models.CharField(max_length=255, verbose_name='Company')),
                ('quantity', models.CharField(max_length=255, verbose_name='quantity')),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Cost')),
                ('expiry_date', models.DateField(verbose_name='Expiry Date')),
                ('comment', models.TextField(blank=True, verbose_name='Comment')),
            ],
        ),
        migrations.CreateModel(
            name='DeadAnimal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=30)),
                ('farm_name', models.CharField(default='', max_length=100)),
                ('no_of_affected', models.FloatField(default=0)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], default='', max_length=10)),
                ('breed', models.CharField(default='', max_length=100)),
                ('sickness_period', models.CharField(default='', max_length=30)),
                ('cause_of_death', models.CharField(default='', max_length=30)),
                ('death_date', models.DateField(blank=True, null=True)),
                ('death_time', models.TimeField(blank=True, null=True)),
                ('signs_before_death', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('postmortem_by_vet', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='', max_length=3)),
                ('safety_precaution', models.CharField(choices=[('Burying', 'Burying'), ('Cremation', 'Cremation')], default='', max_length=30)),
                ('comment', models.CharField(blank=True, default='', max_length=300, null=True, verbose_name='comment')),
            ],
        ),
        migrations.CreateModel(
            name='Debtor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_transaction', models.DateField()),
                ('name', models.CharField(max_length=255)),
                ('mobile_number', models.CharField(max_length=15)),
                ('invoice_no', models.CharField(max_length=40)),
                ('total_invoice_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('correction_done', models.CharField(max_length=20)),
                ('amount_of_correction', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_amount_to_pay', models.DecimalField(decimal_places=2, max_digits=10)),
                ('previous_balance', models.DecimalField(decimal_places=2, max_digits=10)),
                ('grand_total', models.DecimalField(decimal_places=2, max_digits=10)),
                ('amount_paid', models.DecimalField(decimal_places=2, max_digits=10)),
                ('balance_to_pay', models.DecimalField(decimal_places=2, max_digits=10)),
                ('remarks', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Deworming',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('species_targeted', models.CharField(choices=[('Cattle', 'Cattle'), ('Sheep', 'Sheep'), ('Goat', 'Goat'), ('Donkey', 'Donkey'), ('Dog', 'Dog'), ('Horse', 'Horse'), ('Poultry', 'Poultry'), ('Other', 'Other')], max_length=10)),
                ('other', models.CharField(blank=True, max_length=255, null=True)),
                ('animal_name', models.CharField(max_length=100)),
                ('no_of_adults', models.IntegerField()),
                ('no_of_young_ones', models.IntegerField()),
                ('body_conditions', models.TextField()),
                ('deworming_date', models.DateField()),
                ('drug_of_choice', models.CharField(max_length=255)),
                ('parasites', models.CharField(max_length=255)),
                ('withdrawal_period', models.CharField(max_length=255)),
                ('side_effects', models.TextField(blank=True, null=True)),
                ('nxt_deworming_date', models.DateField()),
                ('farmer_name', models.CharField(max_length=255)),
                ('village', models.CharField(max_length=255)),
                ('contact', models.CharField(max_length=15)),
                ('provided_by', models.CharField(max_length=255)),
                ('vet_name', models.CharField(max_length=255)),
                ('vet_category', models.CharField(choices=[('surgeon', 'Surgeon'), ('technologist', 'Technologist'), ('technician', 'Technician')], max_length=30)),
                ('reg_no', models.CharField(max_length=255)),
                ('vet_contact', models.CharField(max_length=15)),
                ('signature', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Diary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('time_of_event', models.TimeField()),
                ('main_activity', models.CharField(max_length=255)),
                ('client_contact', models.CharField(max_length=15)),
                ('remarks', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DiseaseReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('livestock_category', models.CharField(choices=[('cattle', 'Cattle'), ('sheep', 'Sheep'), ('goat', 'Goat'), ('donkey', 'Donkey'), ('dog', 'Dog'), ('cat', 'Cat'), ('poultry', 'Poultry'), ('none', 'None')], max_length=20)),
                ('other_livestock_category', models.CharField(blank=True, max_length=50, null=True)),
                ('number_of_animals_affected', models.IntegerField()),
                ('sex_of_animals_affected', models.CharField(choices=[('female', 'Female'), ('male', 'Male'), ('both', 'Both Female and Male')], max_length=10)),
                ('age_of_animals_affected', models.CharField(choices=[('adult', 'Adult'), ('young', 'Young'), ('all', 'All')], max_length=10)),
                ('clinical_signs', models.TextField()),
                ('number_of_dead_animals', models.IntegerField()),
                ('propose_control_measures', models.TextField()),
                ('sample_taken_to_lab', models.CharField(choices=[('yes', 'Yes'), ('no', 'No')], max_length=3)),
                ('tentative_diagnosis', models.TextField()),
                ('village_disease_occurred', models.CharField(max_length=100)),
                ('sub_county', models.CharField(max_length=100)),
                ('county', models.CharField(max_length=100)),
                ('owner_name', models.CharField(max_length=100)),
                ('owner_mobile_number', models.CharField(max_length=20)),
                ('vet_in_charge_name', models.CharField(max_length=100)),
                ('vet_registration_number', models.CharField(max_length=50)),
                ('vet_mobile_number', models.CharField(max_length=20)),
                ('signature', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='EmergencyCare',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('livestock_category', models.CharField(choices=[('Cattle', 'Cattle'), ('Sheep', 'Sheep'), ('Goat', 'Goat'), ('Donkey', 'Donkey'), ('Dog', 'Dog'), ('Cat', 'Cat'), ('Horse', 'Horse'), ('Other', 'Other')], max_length=20)),
                ('other_category', models.CharField(blank=True, max_length=100, null=True)),
                ('number_of_animals_affected', models.IntegerField()),
                ('name_of_affected_animal', models.CharField(max_length=100)),
                ('registration_number', models.CharField(blank=True, max_length=50, null=True)),
                ('registration_date', models.DateField()),
                ('emergency_category', models.CharField(choices=[('Dystocia', 'Dystocia'), ('Poisoning', 'Poisoning'), ('Fracture', 'Fracture'), ('Uterine Prolapse', 'Uterine Prolapse'), ('Arsini', 'Arsini'), ('Milk Fever', 'Milk Fever'), ('Severe Bleeding', 'Severe Bleeding'), ('Bloat', 'Bloat'), ('Heatstroke', 'Heatstroke'), ('Choking', 'Choking'), ('Injury', 'Injury')], max_length=50)),
                ('condition_of_emergency', models.CharField(choices=[('Severe', 'Severe'), ('Moderate', 'Moderate')], max_length=20)),
                ('case_history', models.CharField(blank=True, max_length=100, null=True)),
                ('clinical_signs', models.CharField(blank=True, max_length=100, null=True)),
                ('prognosis', models.CharField(choices=[('Good', 'Good'), ('Fair', 'Fair'), ('Poor', 'Poor'), ('Grave', 'Grave')], max_length=100)),
                ('differential_diagnosis', models.CharField(max_length=200)),
                ('final_diagnosis', models.CharField(blank=True, max_length=100, null=True)),
                ('referral_status', models.BooleanField()),
                ('treatment_plan', models.CharField(blank=True, max_length=100, null=True)),
                ('drugs_of_choice', models.CharField(blank=True, max_length=100, null=True)),
                ('comment', models.TextField()),
                ('owner_name', models.CharField(max_length=100)),
                ('village', models.CharField(max_length=100)),
                ('contact', models.CharField(max_length=15)),
                ('service_provided_by', models.CharField(max_length=100)),
                ('vet_category', models.CharField(choices=[('surgeon', 'Surgeon'), ('technologist', 'Technologist'), ('technician', 'Technician')], max_length=30)),
                ('vet_registration_number', models.CharField(blank=True, max_length=50, null=True)),
                ('vet_contact', models.CharField(blank=True, max_length=15, null=True)),
                ('signature_and_stamp', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrollment_date', models.DateField()),
                ('slaughterhouse', models.CharField(max_length=60)),
                ('name', models.CharField(max_length=255)),
                ('id_number', models.CharField(max_length=100)),
                ('mobile_number', models.CharField(max_length=15)),
                ('position', models.CharField(choices=[('flager', 'Flager'), ('cleaner', 'Cleaner'), ('supervisor', 'Supervisor'), ('security_officer', 'Security Officer')], max_length=50)),
                ('medical_license_status', models.CharField(choices=[('updated', 'Updated'), ('not_updated', 'Not Updated')], max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Employees',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrollment_date', models.DateField()),
                ('employee_name', models.CharField(max_length=100)),
                ('id_no', models.CharField(max_length=20, unique=True)),
                ('phone_no', models.CharField(max_length=15)),
                ('county', models.CharField(max_length=50)),
                ('district', models.CharField(max_length=50)),
                ('village', models.CharField(max_length=50)),
                ('next_of_kin', models.CharField(max_length=100)),
                ('next_of_kin_phone_no', models.CharField(max_length=15)),
                ('chief_name', models.CharField(max_length=50)),
                ('chief_phone_no', models.CharField(max_length=15)),
                ('employee_position', models.CharField(choices=[('Milker', 'Milker'), ('Cleaner', 'Cleaner'), ('Animal caretaker', 'Animal caretaker'), ('Driver', 'Driver'), ('Veterinary officer', 'Veterinary officer'), ('Manager', 'Manager')], max_length=50)),
                ('salary', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_method', models.CharField(choices=[('Bank Transfer', 'Bank Transfer'), ('Cash', 'Cash'), ('Cheque', 'Cheque'), ('Mobile Banking', 'Mobile Banking')], max_length=30)),
                ('bank_account', models.CharField(blank=True, max_length=30, null=True)),
                ('mode_of_employment', models.CharField(choices=[('Full-Time', 'Full-Time'), ('Part-Time', 'Part-Time'), ('Contract', 'Contract'), ('Internship', 'Internship')], max_length=20)),
                ('contract_rewal_period', models.IntegerField(help_text='Contract renewal period in months')),
            ],
        ),
        migrations.CreateModel(
            name='FarmConsultation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visit_date', models.DateField()),
                ('area_of_interest', models.CharField(choices=[('Dairy', 'Dairy'), ('Beef Production', 'Beef Production'), ('Poultry Production', 'Poultry Production'), ('Goat Production', 'Goat Production'), ('Pets', 'Pets'), ('Other', 'Other')], max_length=20)),
                ('other', models.CharField(blank=True, max_length=255, null=True)),
                ('recommendation', models.TextField(blank=True, null=True)),
                ('manager', models.CharField(choices=[('veterinary officer', 'Veterinary Officer'), ('livestock officer', 'Livestock Officer'), ('none', 'None')], max_length=30)),
                ('farmer_name', models.CharField(max_length=255)),
                ('contact', models.CharField(max_length=15)),
                ('village', models.CharField(max_length=255)),
                ('provided_by', models.CharField(max_length=254)),
                ('vet_name', models.CharField(max_length=255)),
                ('vet_category', models.CharField(choices=[('surgeon', 'Surgeon'), ('technologist', 'Technologist'), ('technician', 'Technician')], max_length=30)),
                ('vet_reg_no', models.CharField(max_length=255)),
                ('vet_contact', models.CharField(max_length=15)),
                ('signature', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Feeds',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_purchase', models.DateField(verbose_name='Date of Purchase')),
                ('feed_type', models.CharField(choices=[('Dairy Meal', 'Dairy Meal'), ('Wheat Bran', 'Wheat Bran'), ('Maize Chaff', 'Maize Chaff'), ('Sunflower', 'Sunflower')], max_length=15, verbose_name='Feed Type')),
                ('company', models.CharField(max_length=255, verbose_name='Company')),
                ('expiry_date', models.DateField(verbose_name='Expiry Date')),
                ('quantity_purchased', models.CharField(max_length=255, verbose_name='Quantity purchased')),
                ('trade_name', models.CharField(max_length=255, verbose_name='Trade Name')),
                ('weight', models.CharField(max_length=255, verbose_name='Weight')),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Cost')),
                ('comment', models.TextField(blank=True, verbose_name='Comment')),
            ],
        ),
        migrations.CreateModel(
            name='GestationMonitoring',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gestation_date', models.DateField()),
                ('repeat_date', models.DateField(blank=True, null=True)),
                ('expected_delivery_date', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='HeatSignMonitoring',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('reg_no', models.CharField(max_length=20)),
                ('status', models.CharField(choices=[('Adult', 'Adult'), ('Heifer', 'Heifer')], max_length=10)),
                ('date_of_heat_sign', models.DateField()),
                ('date_of_heat_monitoring', models.DateField()),
                ('exp_date_of_repeated_heat', models.DateField()),
                ('reason_skip_monitoring', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_category', models.CharField(choices=[('Deworming', 'Deworming'), ('Surgery', 'Surgery'), ('AI', 'Artificial Insemination'), ('Clinical', 'Clinical'), ('Vaccination', 'Vaccination'), ('Post Mortem', 'Post Mortem'), ('Pregnancy Diagnosis', 'Pregnancy Diagnosis'), ('Lab Charges', 'Lab Charges'), ('Farm Consultation', 'Farm Consultation'), ('Telemedicine Services', 'Telemedicine Services'), ('Uterine Irrigation', 'Uterine Irrigation'), ('Emergency Care', 'Emergency Care'), ('Livestock Examination', 'Livestock Examination'), ('None', 'None')], max_length=50)),
                ('other_invoice_category', models.CharField(max_length=100)),
                ('invoice_particulars', models.CharField(max_length=200)),
                ('date_of_invoice', models.DateField()),
                ('total_amount_due', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_method', models.CharField(max_length=30)),
                ('farmer_name', models.CharField(max_length=100)),
                ('village', models.CharField(max_length=100)),
                ('contact', models.CharField(max_length=15)),
                ('provided_by', models.CharField(max_length=40)),
                ('vet_in_charge_of_invoice', models.CharField(max_length=100)),
                ('vet_category', models.CharField(choices=[('surgeon', 'Surgeon'), ('technologist', 'Technologist'), ('technician', 'Technician')], max_length=30)),
                ('vet_registration_number', models.CharField(max_length=100)),
                ('vet_contact', models.CharField(max_length=15)),
                ('signature', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='LaboratoryRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('livestock_category', models.CharField(choices=[('cattle', 'Cattle'), ('sheep', 'Sheep'), ('goat', 'Goat'), ('dog', 'Dog'), ('cat', 'Cat'), ('horse', 'Horse'), ('poultry', 'Poultry'), ('none', 'None')], max_length=10)),
                ('other_livestock', models.CharField(blank=True, max_length=100, null=True)),
                ('name_of_animal', models.CharField(max_length=100)),
                ('registration_number', models.CharField(max_length=100)),
                ('age_of_animal', models.CharField(choices=[('young', 'Young'), ('adult', 'Adult')], max_length=10)),
                ('sex_of_animal', models.CharField(choices=[('male', 'Male'), ('female', 'Female')], max_length=6)),
                ('history_of_animal', models.TextField()),
                ('clinical_signs', models.TextField()),
                ('type_of_sample_collected', models.CharField(choices=[('milk', 'Milk'), ('blood_smear', 'Blood Smear'), ('lymph_node_smear', 'Lymph Node Smear'), ('urine', 'Urine'), ('faeces', 'Faeces'), ('cfs', 'CFS'), ('biopsy', 'Biopsy'), ('skin_scraping', 'Skin Scraping'), ('vaginal_swap', 'Vaginal Swap'), ('head', 'Head')], max_length=20)),
                ('date_of_sampling', models.DateField()),
                ('sample_storage_condition', models.CharField(max_length=255)),
                ('means_of_transportation', models.CharField(choices=[('vehicle', 'Vehicle'), ('motorbike', 'Motorbike'), ('footing', 'Footing')], max_length=10)),
                ('sample_rating', models.CharField(choices=[('highly_infectious', 'Highly Infectious'), ('not_infectious', 'Not Infectious')], max_length=20)),
                ('owner_name', models.CharField(max_length=100)),
                ('owner_village', models.CharField(max_length=100)),
                ('owner_mobile_number', models.CharField(max_length=15)),
                ('vet_in_charge_name', models.CharField(max_length=100)),
                ('vet_registration_number', models.CharField(max_length=100)),
                ('vet_mobile_number', models.CharField(max_length=15)),
                ('signature', models.CharField(max_length=255)),
                ('stamp', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='LactatingCow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cow_name', models.CharField(max_length=100, unique=True)),
                ('reg_no', models.CharField(max_length=50)),
                ('sire_details', models.CharField(max_length=100)),
                ('breed', models.CharField(max_length=50)),
                ('breeding_level', models.CharField(choices=[('Purebred', 'Purebred'), ('Crossbred', 'Crossbred'), ('MixedBreed', 'MixedBreed')], max_length=50)),
                ('age', models.PositiveIntegerField(help_text='Age in years')),
                ('calving_down_date', models.DateField()),
                ('no_of_calves', models.PositiveIntegerField()),
                ('average_daily_milk', models.FloatField(help_text='Average daily milk production in liters')),
                ('lactation_stage', models.CharField(choices=[('early', 'Early'), ('mid', 'Mid'), ('late', 'Late')], max_length=10)),
                ('expected_date_of_drying_off', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Livestock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('animal_type', models.CharField(choices=[('Cow', 'Cow'), ('Goat', 'Goat'), ('Sheep', 'Sheep'), ('Pig', 'Pig'), ('Chicken', 'Chicken')], default='', max_length=50)),
                ('breed_category', models.CharField(choices=[('Dog', [('Labrador Retriever', 'Labrador Retriever'), ('German Shepherd', 'German Shepherd'), ('Golden Retriever', 'Golden Retriever'), ('Bulldog', 'Bulldog'), ('Beagle', 'Beagle'), ('Poodle', 'Poodle'), ('Boxer', 'Boxer'), ('Dachshund', 'Dachshund'), ('Yorkshire Terrier', 'Yorkshire Terrier'), ('Rottweiler', 'Rottweiler')]), ('Cat', [('Siamese', 'Siamese'), ('Persian', 'Persian'), ('Maine Coon', 'Maine Coon'), ('Ragdoll', 'Ragdoll'), ('British Shorthair', 'British Shorthair'), ('Sphynx', 'Sphynx'), ('Bengal', 'Bengal'), ('Abyssinian', 'Abyssinian'), ('Scottish Fold', 'Scottish Fold'), ('Burmese', 'Burmese')]), ('Horse', [('Thoroughbred', 'Thoroughbred'), ('Quarter Horse', 'Quarter Horse'), ('Arabian', 'Arabian'), ('Appaloosa', 'Appaloosa'), ('Paint Horse', 'Paint Horse'), ('Morgan', 'Morgan'), ('Tennessee Walking Horse', 'Tennessee Walking Horse'), ('Friesian', 'Friesian'), ('Pony of the Americas', 'Pony of the Americas'), ('Miniature Horse', 'Miniature Horse')]), ('Cattle', [('Angus', 'Angus'), ('Hereford', 'Hereford'), ('Charolais', 'Charolais'), ('Simmental', 'Simmental'), ('Limousin', 'Limousin'), ('Texas Longhorn', 'Texas Longhorn'), ('Holstein', 'Holstein'), ('Jersey', 'Jersey'), ('Gelbvieh', 'Gelbvieh'), ('Brahman', 'Brahman')]), ('Sheep', [('Merino', 'Merino'), ('Dorper', 'Dorper'), ('Suffolk', 'Suffolk'), ('Rambouillet', 'Rambouillet'), ('Hampshire', 'Hampshire'), ('Shropshire', 'Shropshire'), ('Dorset', 'Dorset'), ('Cotswold', 'Cotswold'), ('Lincoln', 'Lincoln'), ('Targhee', 'Targhee')]), ('Goat', [('Boer', 'Boer'), ('Nubian', 'Nubian'), ('Saanen', 'Saanen'), ('Angora', 'Angora'), ('LaMancha', 'LaMancha'), ('Alpine', 'Alpine'), ('Toggenburg', 'Toggenburg'), ('Kiko', 'Kiko'), ('Spanish', 'Spanish'), ('Pygmy', 'Pygmy')])], default='', max_length=50)),
                ('date_added', models.DateField()),
                ('no_of_animals', models.FloatField(default=0)),
                ('no_of_males', models.FloatField(default=0)),
                ('no_of_females', models.FloatField(default=0)),
                ('no_of_adults', models.FloatField(default=0)),
                ('no_of_young', models.FloatField(default=0)),
                ('no_of_dead', models.FloatField(default=0)),
                ('reason_for_death', models.CharField(default='', max_length=100)),
                ('comment', models.TextField(blank=True, default='', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='LivestockExaminationRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('livestock_category', models.CharField(choices=[('Cattle', 'Cattle'), ('Sheep', 'Sheep'), ('Goat', 'Goat'), ('Poultry', 'Poultry'), ('None', 'None')], max_length=50)),
                ('other_category', models.CharField(blank=True, max_length=100, null=True)),
                ('age_of_animal', models.PositiveIntegerField()),
                ('breed', models.CharField(max_length=100)),
                ('sex_of_animal', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=10)),
                ('number_of_animals', models.PositiveIntegerField()),
                ('origin_of_animal', models.CharField(max_length=100)),
                ('destination', models.CharField(max_length=100)),
                ('reason_for_examination', models.CharField(choices=[('Slaughter', 'Slaughter'), ('Breeding', 'Breeding'), ('Culling', 'Culling'), ('Disease Control', 'Disease Control'), ('For Sale', 'For Sale')], max_length=50)),
                ('recommendation', models.TextField()),
                ('owner_name', models.CharField(max_length=100)),
                ('owner_mobile_number', models.CharField(max_length=15)),
                ('veterinary_officer_in_charge', models.CharField(max_length=100)),
                ('registration_number', models.CharField(max_length=50)),
                ('veterinary_officer_mobile_number', models.CharField(max_length=15)),
                ('veterinary_officer_signature', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='LivestockIncident',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('livestock_category', models.CharField(choices=[('cattle', 'Cattle'), ('sheep', 'Sheep'), ('goat', 'Goat'), ('dog', 'Dog'), ('cat', 'Cat'), ('horse', 'Horse'), ('poultry', 'Poultry')], max_length=10)),
                ('animal_name', models.CharField(max_length=100)),
                ('sex', models.CharField(choices=[('male', 'Male'), ('female', 'Female')], max_length=6)),
                ('age', models.PositiveIntegerField()),
                ('case_history', models.TextField()),
                ('number_of_sick_animals', models.PositiveIntegerField()),
                ('morbidity_rate', models.CharField(blank=True, max_length=40)),
                ('incidence_date', models.DateField()),
                ('incidence_time', models.TimeField()),
                ('cadaver_signs', models.TextField()),
                ('open_for_pm', models.CharField(choices=[('yes', 'Yes'), ('no', 'No')], max_length=3)),
                ('no_pm_reason', models.TextField(blank=True, null=True)),
                ('path_condition', models.TextField()),
                ('sample_sent', models.CharField(choices=[('yes', 'Yes'), ('no', 'No')], max_length=3)),
                ('cause_notifiable', models.CharField(choices=[('yes', 'Yes'), ('no', 'No')], max_length=3)),
                ('cause_zoonotic', models.CharField(choices=[('yes', 'Yes'), ('no', 'No')], max_length=3)),
                ('precaution', models.TextField()),
                ('disposal_way', models.CharField(choices=[('burial', 'Burial'), ('cremation', 'Cremation')], max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='LivestockInsurance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_insured', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Number Insured')),
                ('breed', models.CharField(max_length=50)),
                ('animal_species', models.CharField(max_length=50)),
                ('company', models.CharField(max_length=255, verbose_name='Company')),
                ('mode_of_payment', models.CharField(max_length=255, verbose_name='Mode Of payment')),
                ('payment_date', models.DateField(verbose_name='Payment Date')),
                ('total', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Total')),
                ('comment', models.TextField(blank=True, verbose_name='Comment')),
            ],
        ),
        migrations.CreateModel(
            name='MilkRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('time_of_milking', models.CharField(choices=[('Morning', 'Morning'), ('Noon', 'Noon'), ('Evening', 'Evening')], max_length=10)),
                ('quantity', models.FloatField(help_text='Amount of milk in liters')),
            ],
        ),
        migrations.CreateModel(
            name='Minerals',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_purchase', models.DateField(verbose_name='Date of Purchase')),
                ('mineral_type', models.CharField(choices=[('Dairy Lick', 'Dairy Lick'), ('Stock Lick', 'Stock Lick'), ('Dry Cow', 'Dry Cow'), ('Joto', 'Joto'), ('Calves Mineral', 'Calves Mineral')], max_length=15, verbose_name='Feed Type')),
                ('quantity', models.CharField(max_length=255, verbose_name='Company')),
                ('company', models.CharField(max_length=255, verbose_name='Company')),
                ('expiry_date', models.DateField(verbose_name='Expiry Date')),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Cost')),
                ('comment', models.TextField(blank=True, verbose_name='Comment')),
            ],
        ),
        migrations.CreateModel(
            name='Moderator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='MonthlyMilkRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.DateField()),
                ('total_quantity', models.FloatField(help_text='Total milk in liters for the month')),
            ],
        ),
        migrations.CreateModel(
            name='MonthlyReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_submission', models.DateField()),
                ('sub_county', models.CharField(max_length=100)),
                ('ward_level', models.CharField(max_length=100)),
                ('submitted_by', models.CharField(max_length=100)),
                ('registration_number', models.CharField(max_length=50)),
                ('phone_number', models.CharField(max_length=15)),
                ('uploaded_report', models.FileField(upload_to='monthly_reports/')),
            ],
        ),
        migrations.CreateModel(
            name='MovementPermit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_permit', models.DateField()),
                ('sub_county_district', models.CharField(max_length=100)),
                ('ward_level', models.CharField(max_length=100)),
                ('authorized_by', models.CharField(max_length=100)),
                ('registration_number', models.CharField(max_length=50)),
                ('phone_number', models.CharField(max_length=15)),
                ('uploaded_permit', models.FileField(upload_to='movement_permits/')),
            ],
        ),
        migrations.CreateModel(
            name='NewAnimal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100)),
                ('reg_no', models.CharField(default='', max_length=100)),
                ('source', models.CharField(choices=[('Market', 'Market'), ('Farmer', 'Farmer')], default='', max_length=50)),
                ('farmer_name', models.CharField(default='', max_length=100)),
                ('animal_type', models.CharField(default='', max_length=100)),
                ('breed', models.CharField(default='', max_length=100)),
                ('breeding_level', models.CharField(choices=[('Purebred', 'Purebred'), ('Crossbred', 'Crossbred'), ('Mixed Breed', 'Mixed Breed')], default='', max_length=100)),
                ('defect', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='', max_length=3)),
                ('defect_reason', models.TextField(default='')),
                ('animal_color', models.CharField(default='', max_length=100)),
                ('market_value', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('medical_history', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='', max_length=3)),
                ('assessed_by_vet', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='', max_length=3)),
                ('insured', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='', max_length=3)),
                ('insuring_company', models.CharField(default='', max_length=100)),
                ('date_added', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='NoObjection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_confirmation', models.DateField()),
                ('sub_county_district', models.CharField(max_length=100)),
                ('ward_level', models.CharField(max_length=100)),
                ('confirmed_by', models.CharField(max_length=100)),
                ('registration_number', models.CharField(max_length=50)),
                ('phone_number', models.CharField(max_length=15)),
                ('uploaded_no_objection_form', models.FileField(upload_to='no_objection_forms/')),
            ],
        ),
        migrations.CreateModel(
            name='PostMortemRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('livestock_category', models.CharField(choices=[('cattle', 'Cattle'), ('sheep', 'Sheep'), ('goat', 'Goat'), ('dog', 'Dog'), ('cat', 'Cat'), ('horse', 'Horse'), ('poultry', 'Poultry'), ('none', 'None')], max_length=10)),
                ('other_livestock', models.CharField(blank=True, max_length=100, null=True)),
                ('name_of_animal', models.CharField(max_length=100)),
                ('sex', models.CharField(choices=[('male', 'Male'), ('female', 'Female')], max_length=6)),
                ('age', models.CharField(max_length=100)),
                ('case_history', models.TextField()),
                ('number_of_sick_animals', models.IntegerField()),
                ('number_of_dead', models.IntegerField()),
                ('morbidity_rate', models.CharField(max_length=100)),
                ('date_of_incidence', models.DateField()),
                ('time_of_incidence', models.TimeField()),
                ('signs_of_cadaver', models.TextField()),
                ('cadaver_open_for_pm', models.CharField(choices=[('yes', 'Yes'), ('no', 'No')], max_length=3)),
                ('reasons_for_not_opening', models.TextField(blank=True, null=True)),
                ('major_pathological_conditions', models.TextField(blank=True, null=True)),
                ('sample_sent_to_lab', models.CharField(choices=[('yes', 'Yes'), ('no', 'No')], max_length=3)),
                ('cause_of_death_notifiable', models.CharField(choices=[('yes', 'Yes'), ('no', 'No')], max_length=3)),
                ('cause_of_death_zoonotic', models.CharField(choices=[('yes', 'Yes'), ('no', 'No')], max_length=3)),
                ('precautions_if_zoonotic', models.TextField(blank=True, null=True)),
                ('cadaver_disposed_by', models.CharField(choices=[('burial', 'Burial'), ('burning', 'Burning')], max_length=7)),
                ('owner_name', models.CharField(max_length=100)),
                ('owner_village', models.CharField(max_length=100)),
                ('owner_mobile_number', models.CharField(max_length=15)),
                ('provided_by', models.CharField(max_length=255)),
                ('vet_in_charge_name', models.CharField(max_length=100)),
                ('vet_category', models.CharField(choices=[('surgeon', 'Surgeon'), ('technologist', 'Technologist'), ('technician', 'Technician')], max_length=30)),
                ('vet_in_charge_registration_number', models.CharField(max_length=100)),
                ('vet_in_charge_mobile_number', models.CharField(max_length=15)),
                ('signature', models.TextField(blank=True, null=True)),
                ('stamp', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Practitioner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=20)),
                ('last_name', models.CharField(max_length=20)),
                ('reg_date', models.DateField()),
                ('phone_number', models.CharField(max_length=20)),
                ('email', models.CharField(max_length=100)),
                ('county', models.CharField(max_length=30)),
                ('subcounty', models.CharField(max_length=30)),
                ('ward', models.CharField(max_length=30)),
                ('area_of_operation', models.CharField(max_length=30)),
                ('specialization', models.CharField(choices=[('large_animals', 'Large Animals'), ('small_animals', 'Small Animals')], max_length=50)),
                ('vet_category', models.CharField(choices=[('surgeon', 'Surgeon'), ('technologist', 'Technologist'), ('technician', 'Technician')], max_length=50)),
                ('registration_number', models.CharField(max_length=50)),
                ('employment_status', models.CharField(choices=[('employed', 'Employed'), ('private_practitioner', 'Private Practitioneer ')], max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='PregnancyDiagnosis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cow_name', models.CharField(max_length=255)),
                ('reg_no', models.CharField(max_length=255)),
                ('category', models.CharField(choices=[('Adult', 'Adult'), ('Heifer', 'Heifer')], max_length=10)),
                ('date_of_ai', models.DateField()),
                ('pg_diag_date', models.DateField()),
                ('pd_results', models.CharField(choices=[('Positive', 'Positive'), ('Negative', 'Negative'), ('Not Confirmed', 'Not Confirmed')], max_length=15)),
                ('pd_method', models.CharField(max_length=255)),
                ('positive_pd_months', models.DecimalField(decimal_places=2, max_digits=5)),
                ('negative_pd_comment', models.TextField(blank=True, null=True)),
                ('pd_nxt_date', models.DateField(blank=True, null=True)),
                ('expctd_delivery_date', models.DateField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('owners_name', models.CharField(max_length=255)),
                ('village', models.CharField(max_length=255)),
                ('contact', models.CharField(max_length=15)),
                ('provided_by', models.CharField(max_length=255)),
                ('vet_name', models.CharField(max_length=255)),
                ('vet_category', models.CharField(choices=[('surgeon', 'Surgeon'), ('technologist', 'Technologist'), ('technician', 'Technician')], max_length=30)),
                ('vet_reg_no', models.CharField(max_length=255)),
                ('vet_contact', models.CharField(max_length=15)),
                ('signature', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PregnancyMonitoring',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('reg_no', models.CharField(max_length=50)),
                ('date_of_ai', models.DateField()),
                ('exp_heat_date', models.DateField(blank=True, null=True)),
                ('repeat_heat_date', models.DateField(blank=True, null=True)),
                ('first_preg_diag_date', models.DateField(blank=True, null=True)),
                ('steaming_up_date', models.DateField(blank=True, null=True)),
                ('expected_dob', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PriceList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_purchase', models.DateField()),
                ('product_name', models.CharField(max_length=100)),
                ('manufacturing_company', models.CharField(max_length=100)),
                ('buying_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('retail_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('wholesale_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('expiring_date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='QuarterlyReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_submission', models.DateField()),
                ('sub_county', models.CharField(max_length=100)),
                ('ward_level', models.CharField(max_length=100)),
                ('submitted_by', models.CharField(max_length=100)),
                ('registration_number', models.CharField(max_length=50)),
                ('phone_number', models.CharField(max_length=15)),
                ('uploaded_report', models.FileField(upload_to='monthly_reports/')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('option_a', models.CharField(max_length=255)),
                ('option_b', models.CharField(max_length=255)),
                ('option_c', models.CharField(max_length=255)),
                ('option_d', models.CharField(max_length=255)),
                ('correct_answer', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D')], max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='QuizResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.FloatField()),
                ('passed', models.CharField(choices=[('pass', 'Pass'), ('fail', 'Fail')], default='fail', max_length=10)),
                ('failed_attempts', models.IntegerField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Referral',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('species', models.CharField(max_length=255)),
                ('treatment_duration', models.CharField(max_length=255)),
                ('previous_treatment_state', models.TextField()),
                ('prognosis', models.CharField(choices=[('Good', 'Good'), ('Fair', 'Fair')], max_length=30)),
                ('referral_date', models.DateField()),
                ('referral_choice', models.CharField(choices=[('farmer', 'Farmer'), ('vet', 'Vet')], max_length=25)),
                ('r_vet_name', models.CharField(max_length=255)),
                ('r_vet_contact', models.CharField(max_length=15)),
                ('farmer_name', models.CharField(max_length=255)),
                ('village', models.CharField(max_length=255)),
                ('contact', models.CharField(max_length=15)),
                ('provided_by', models.CharField(max_length=255)),
                ('vet_name', models.CharField(max_length=255)),
                ('vet_category', models.CharField(choices=[('surgeon', 'Surgeon'), ('technologist', 'Technologist'), ('technician', 'Technician')], max_length=30)),
                ('vet_reg_no', models.CharField(max_length=255)),
                ('vet_contact', models.CharField(max_length=15)),
                ('signature', models.TextField(blank=True, null=True)),
                ('stamp', models.TextField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Salaries',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_position', models.CharField(choices=[('Milker', 'Milker'), ('Cleaner', 'Cleaner'), ('Animal caretaker', 'Animal caretaker'), ('Driver', 'Driver'), ('Veterinary officer', 'Veterinary officer'), ('Manager', 'Manager')], max_length=50)),
                ('identification', models.CharField(max_length=255, unique=True, verbose_name='identification')),
                ('mode_of_payment', models.CharField(choices=[('Bank Transfer', 'Bank Transfer'), ('Cash', 'Cash'), ('Cheque', 'Cheque'), ('Mobile Banking', 'Mobile Banking')], max_length=255, verbose_name='Mode')),
                ('bank_account', models.CharField(max_length=255, verbose_name='Bank Account')),
                ('salary_amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Amount')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Amount')),
                ('balance', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Balance')),
                ('payment_date', models.DateField(verbose_name='Payment Date')),
                ('payment_type', models.CharField(choices=[('Salary', 'Salary'), ('Advance', 'Advance'), ('Emergency', 'Emergency'), ('Other', 'Other')], max_length=255, verbose_name='Type')),
                ('comment', models.TextField(blank=True, verbose_name='Comment')),
            ],
        ),
        migrations.CreateModel(
            name='SalesOfMilk',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_sales', models.DateField()),
                ('number_of_cows_milked', models.PositiveIntegerField()),
                ('total_kgs_milked', models.FloatField()),
                ('milk_sales_to', models.CharField(choices=[('Neighbour', 'Neighbour'), ('Hotel', 'Hotel'), ('Cooperative', 'Cooperative')], max_length=12)),
                ('buyer_contact', models.CharField(max_length=50)),
                ('price_per_kg', models.FloatField()),
                ('total_cash_received', models.FloatField()),
                ('balance', models.FloatField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SampleCollection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('livestock_category', models.CharField(choices=[('cattle', 'Cattle'), ('sheep', 'Sheep'), ('goat', 'Goat'), ('dog', 'Dog'), ('cat', 'Cat'), ('horse', 'Horse'), ('poultry', 'Poultry'), ('none', 'None')], max_length=10)),
                ('other_livestock', models.CharField(blank=True, max_length=100, null=True)),
                ('name_of_animal', models.CharField(max_length=100)),
                ('registration_number', models.CharField(max_length=100)),
                ('age_of_animal', models.CharField(choices=[('young', 'Young'), ('adult', 'Adult')], max_length=10)),
                ('sex_of_animal', models.CharField(choices=[('male', 'Male'), ('female', 'Female')], max_length=6)),
                ('history_of_animal', models.TextField()),
                ('clinical_signs_of_animal', models.TextField()),
                ('type_of_sample_collected', models.CharField(choices=[('milk', 'Milk'), ('blood_smear', 'Blood Smear'), ('lymph_node_smear', 'Lymph Node Smear'), ('urine', 'Urine'), ('faeces', 'Faeces'), ('ear_notching', 'Ear Notching'), ('biopsy', 'Biopsy'), ('skin_scraping', 'Skin Scraping'), ('vaginal_swap', 'Vaginal Swap'), ('head', 'Head')], max_length=20)),
                ('date_of_sampling', models.DateField()),
                ('sample_storage_condition', models.CharField(max_length=100)),
                ('means_of_transportation', models.CharField(max_length=100)),
                ('sample_rating', models.CharField(choices=[('highly_infectious', 'Highly Infectious'), ('not_infectious', 'Not Infectious')], max_length=20)),
                ('owner_name', models.CharField(max_length=100)),
                ('owner_village', models.CharField(max_length=100)),
                ('owner_mobile_number', models.CharField(max_length=15)),
                ('provided_by', models.CharField(max_length=100)),
                ('vet_in_charge_name', models.CharField(max_length=100)),
                ('vet_category', models.CharField(choices=[('surgeon', 'Surgeon'), ('technologist', 'Technologist'), ('technician', 'Technician')], max_length=30)),
                ('vet_in_charge_registration_number', models.CharField(max_length=100)),
                ('vet_in_charge_mobile_number', models.CharField(max_length=15)),
                ('signature', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SampleProcessing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('livestock_category', models.CharField(choices=[('cattle', 'Cattle'), ('sheep', 'Sheep'), ('goat', 'Goat'), ('dog', 'Dog'), ('cat', 'Cat'), ('horse', 'Horse'), ('poultry', 'Poultry'), ('none', 'None')], max_length=10)),
                ('type_of_sample_received', models.CharField(max_length=255)),
                ('sample_rating', models.CharField(choices=[('highly infectious', 'Highly Infectious'), ('not infectious', 'Not Infectious')], max_length=20)),
                ('animal_name', models.CharField(max_length=100)),
                ('registration_number', models.CharField(max_length=100)),
                ('sex_of_animal', models.CharField(choices=[('male', 'Male'), ('female', 'Female')], max_length=6)),
                ('age_of_animal', models.CharField(choices=[('young', 'Young'), ('adult', 'Adult')], max_length=10)),
                ('date_of_reception', models.DateField()),
                ('date_of_sample_processing', models.DateField()),
                ('number_of_days_for_processing', models.CharField(max_length=200)),
                ('date_of_sample_results', models.DateField()),
                ('laboratory_findings', models.TextField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('owner_name', models.CharField(max_length=100)),
                ('owner_village', models.CharField(max_length=100)),
                ('owner_mobile_number', models.CharField(max_length=15)),
                ('lab_technologist_name', models.CharField(max_length=100)),
                ('lab_technologist_registration_number', models.CharField(max_length=100)),
                ('lab_technologist_mobile_number', models.CharField(max_length=15)),
                ('laboratory_name', models.CharField(max_length=100)),
                ('signature', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('content', models.TextField()),
                ('file', models.FileField(upload_to='uploads/')),
                ('is_active', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Slaughterhouse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reg_date', models.DateField()),
                ('name', models.CharField(max_length=255)),
                ('county', models.CharField(max_length=255)),
                ('sub_county', models.CharField(max_length=255)),
                ('location', models.CharField(max_length=255)),
                ('slaughterhouse_status', models.CharField(choices=[('private', 'Private'), ('municipal', 'Municipal')], max_length=50)),
                ('slaughterhouse_category', models.CharField(choices=[('small_scale', 'Small Scale'), ('large_scale', 'Large Scale')], max_length=50)),
                ('livestock_slaughtered', models.CharField(max_length=255)),
                ('number_of_employees', models.IntegerField()),
                ('roller_mark_number', models.CharField(max_length=50)),
                ('inspector_name', models.CharField(max_length=255)),
                ('inspector_registration_number', models.CharField(max_length=100)),
                ('inspector_employment_number', models.CharField(max_length=100)),
                ('inspector_mobile_number', models.CharField(max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_enrollment', models.DateField()),
                ('name', models.CharField(max_length=100)),
                ('mobile_number', models.CharField(max_length=15)),
                ('location', models.CharField(max_length=100)),
                ('business_name', models.CharField(max_length=100)),
                ('mode_of_payment', models.CharField(choices=[('CASH', 'Cash'), ('MOBILE_MONEY', 'Mobile Money'), ('CHEQUES', 'Cheques')], max_length=20)),
                ('account_details', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='SurgicalRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('livestock_category_affected', models.CharField(choices=[('Cattle', 'Cattle'), ('Sheep', 'Sheep'), ('Goat', 'Goat'), ('Donkey', 'Donkey'), ('Dog', 'Dog'), ('Cat', 'Cat'), ('Poultry', 'Poultry'), ('None', 'None')], max_length=10)),
                ('other_livestock_category', models.CharField(blank=True, max_length=100, null=True)),
                ('name_of_animal', models.CharField(max_length=100)),
                ('registration_number', models.CharField(max_length=100)),
                ('sex_of_animal', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=6)),
                ('age_of_animal', models.CharField(choices=[('Young', 'Young'), ('Adult', 'Adult')], max_length=5)),
                ('nature_of_surgery', models.CharField(choices=[('Emergency', 'Emergency'), ('Elective', 'Elective')], max_length=10)),
                ('type_of_surgery', models.CharField(choices=[('C-section', 'C-section'), ('Interstinal Torsion', 'Interstinal Torsion'), ('Tumor Extraction', 'Tumor Extraction'), ('Canine Spaying', 'Canine Spaying'), ('Hernia', 'Hernia'), ('Warts Extraction', 'Warts Extraction'), ('Skin Repairs', 'Skin Repairs'), ('Castration', 'Castration'), ('Fracture Correction', 'Fracture Correction'), ('Rumenotomy', 'Rumenotomy'), ('None', 'None')], max_length=50)),
                ('other_surgery', models.CharField(blank=True, max_length=100, null=True)),
                ('status_before_operation', models.CharField(choices=[('Good', 'Good'), ('Dehydrated', 'Dehydrated'), ('Weak', 'Weak')], max_length=15)),
                ('pre_operative_management', models.TextField(blank=True, null=True)),
                ('date_of_operation', models.DateField()),
                ('post_operation_management', models.TextField(blank=True, null=True)),
                ('prognosis_of_patient', models.CharField(choices=[('Good', 'Good'), ('Fair', 'Fair'), ('Grave', 'Grave')], max_length=15)),
                ('case_history', models.TextField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('owner_name', models.CharField(max_length=100)),
                ('owner_village', models.CharField(max_length=100)),
                ('owner_mobile_number', models.CharField(max_length=15)),
                ('vet_in_charge', models.CharField(max_length=100)),
                ('vet_registration_number', models.CharField(max_length=100)),
                ('provided_by', models.CharField(max_length=100)),
                ('practitioner', models.CharField(max_length=100)),
                ('vet_category', models.CharField(choices=[('surgeon', 'Surgeon'), ('technologist', 'Technologist'), ('technician', 'Technician')], max_length=20)),
                ('vet_mobile_number', models.CharField(max_length=15)),
                ('signature', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tutorial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson', models.CharField(max_length=255)),
                ('cpd_number', models.CharField(max_length=30)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('points', models.IntegerField()),
                ('presented_by', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.FloatField(default=0.0)),
                ('completed_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserRetake',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('retakes_left', models.IntegerField(default=3)),
            ],
        ),
        migrations.CreateModel(
            name='UterineIrrigationRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('livestock_category', models.CharField(choices=[('Cattle', 'Cattle'), ('Goat', 'Goat'), ('Sheep', 'Sheep'), ('Horse', 'Horse'), ('Dog', 'Dog'), ('Pissi', 'Pissi')], max_length=20)),
                ('name_of_animal', models.CharField(max_length=100)),
                ('registration_number', models.CharField(max_length=100)),
                ('registration_date', models.DateField()),
                ('reason', models.CharField(choices=[('Repeat Breeding', 'Repeat Breeding'), ('Metritis', 'Metritis'), ('Abortion', 'Abortion'), ('RAB', 'RAB')], max_length=20)),
                ('number_of_repeats', models.IntegerField(default=0)),
                ('abortion_status_history', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20)),
                ('rabies_status_history', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20)),
                ('exp_ex_date', models.DateField()),
                ('previous_insemination_by', models.CharField(max_length=100)),
                ('treatment_plan', models.TextField(blank=True, null=True)),
                ('drugs_of_choice', models.CharField(blank=True, max_length=200, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('owner_name', models.CharField(max_length=100)),
                ('village', models.CharField(max_length=100)),
                ('contact', models.CharField(max_length=15)),
                ('service_provided_by', models.CharField(max_length=100)),
                ('vet_in_charge', models.CharField(blank=True, max_length=100, null=True)),
                ('vet_category', models.CharField(choices=[('surgeon', 'Surgeon'), ('technologist', 'Technologist'), ('technician', 'Technician')], max_length=30)),
                ('registration_number_vet', models.CharField(blank=True, max_length=100, null=True)),
                ('contact_vet', models.CharField(blank=True, max_length=15, null=True)),
                ('sign_and_stamp', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='VaccinationRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('species_targeted', models.CharField(choices=[('Cattle', 'Cattle'), ('Sheep', 'Sheep'), ('Goat', 'Goat'), ('Donkey', 'Donkey'), ('Dog', 'Dog'), ('Horse', 'Horse'), ('Poultry', 'Poultry'), ('Other', 'Other')], max_length=20)),
                ('other_species', models.CharField(blank=True, max_length=255, null=True)),
                ('number_of_animals_vaccinated', models.IntegerField()),
                ('age_of_animal', models.CharField(max_length=50)),
                ('sex_of_animal', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('All', 'All')], max_length=10)),
                ('breed_of_animal', models.CharField(max_length=100)),
                ('color_of_animal', models.CharField(max_length=100)),
                ('other_description', models.TextField(blank=True, null=True)),
                ('vaccination_of', models.CharField(choices=[('anthrax', 'Anthrax'), ('fmd', 'FMD'), ('lumpy_skin_disease', 'Lumpy Skin Disease'), ('rift_valley_fever', 'Rift Valley Fever'), ('rabies', 'Rabies'), ('cbpp', 'CBPP '), ('ccpp', 'CCPP '), ('ppr', 'PPR '), ('newcastle_disease', 'Newcastle Disease'), ('canine_distemper', 'Canine Distemper'), ('none', 'None')], max_length=20)),
                ('other_disease', models.CharField(max_length=255)),
                ('vaccines_used', models.CharField(max_length=255)),
                ('batch_number', models.CharField(max_length=255)),
                ('dosage', models.CharField(max_length=255)),
                ('expiry_date', models.DateField()),
                ('date_of_vaccination', models.DateField()),
                ('vaccination_type', models.CharField(choices=[('Primary', 'Primary'), ('Booster', 'Booster')], max_length=10)),
                ('next_date_of_vaccination', models.DateField()),
                ('name_of_rash', models.CharField(blank=True, max_length=255, null=True)),
                ('village_vaccination_done', models.CharField(blank=True, max_length=255, null=True)),
                ('nature_of_vaccination_program', models.CharField(choices=[('Mass', 'Mass'), ('Individual', 'Individual')], max_length=10)),
                ('name_of_owner', models.CharField(max_length=255)),
                ('sub_county', models.CharField(max_length=255)),
                ('ward', models.CharField(max_length=255)),
                ('village', models.CharField(max_length=255)),
                ('contact', models.CharField(max_length=50)),
                ('provided_by', models.CharField(max_length=255)),
                ('name_of_vet_incharge', models.CharField(max_length=255)),
                ('vet_category', models.CharField(choices=[('surgeon', 'Surgeon'), ('technologist', 'Technologist'), ('technician', 'Technician')], max_length=30)),
                ('registration_number', models.CharField(max_length=255)),
                ('mobile_number', models.CharField(max_length=20)),
                ('signature', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='VeterinaryBilling',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('billing_category', models.CharField(choices=[('Deworming', 'Deworming'), ('Surgery', 'Surgery'), ('AI', 'AI'), ('Clinical', 'Clinical'), ('Vaccination', 'Vaccination'), ('Post Mortem', 'Post Mortem'), ('Pregnancy Diagnosis', 'Pregnancy Diagnosis'), ('Lab Charges', 'Lab Charges'), ('Uterine Irrigation', 'Uterine Irrigation'), ('Emergency Care', 'Emergency Care'), ('Livestock Examination', 'Livestock Examination'), ('Farm Consultation', 'Farm Consultation'), ('None', 'None')], max_length=100)),
                ('other_billing_category', models.CharField(max_length=50)),
                ('total_amount_billed', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_paid', models.DecimalField(decimal_places=2, max_digits=10)),
                ('balance', models.DecimalField(decimal_places=2, max_digits=10)),
                ('mode_of_payment', models.CharField(choices=[('Cash', 'Cash'), ('Cheque', 'Cheque'), ('Mobile Money', 'Mobile Money'), ('Bank Transfer', 'Bank Transfer'), ('Other', 'Other')], max_length=20)),
                ('agreed_date', models.DateField()),
                ('payment_plan', models.CharField(choices=[('full payment', 'Full Payment'), ('partial payment', 'Partial Payment')], max_length=50)),
                ('payment_status', models.CharField(choices=[('in arrears', 'In Arreas'), ('paid', 'Paid')], max_length=50)),
                ('farmer_name', models.CharField(max_length=255)),
                ('village', models.CharField(max_length=255)),
                ('contact', models.CharField(max_length=15)),
                ('provided_by', models.CharField(max_length=100)),
                ('vet_to_be_paid', models.CharField(max_length=255)),
                ('vet_category', models.CharField(choices=[('surgeon', 'Surgeon'), ('technologist', 'Technologist'), ('technician', 'Technician')], max_length=30)),
                ('reg_no', models.CharField(max_length=255)),
                ('vet_contact', models.CharField(max_length=15)),
                ('signature', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='VeterinaryBills',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_billing', models.DateField(verbose_name='Date of Billing')),
                ('bill_category', models.CharField(max_length=20, verbose_name='Bill Category')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Amount')),
                ('amount_billed', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Amount')),
                ('balance', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Balance')),
                ('billing_details', models.CharField(max_length=255, verbose_name='Company')),
                ('comment', models.TextField(blank=True, verbose_name='Comment')),
            ],
        ),
        migrations.CreateModel(
            name='VeterinaryDrugs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_purchase', models.DateField(max_length=40, verbose_name='Date of purchase')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('category', models.CharField(choices=[('Antibiotics', 'Antibiotics '), ('Vaccines', 'Vaccines'), ('Hormones', 'Hormones'), ('Metabolics', 'Metabolics')], max_length=15, verbose_name='Category')),
                ('company', models.CharField(max_length=50, verbose_name='company')),
                ('expiry_date', models.DateField(verbose_name='Expiry Date')),
                ('strange_condition', models.CharField(max_length=255, verbose_name='Strange Condition')),
                ('vet_reg', models.CharField(max_length=255, verbose_name='Vet Registration')),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Number Insured')),
                ('comment', models.TextField(blank=True, verbose_name='Comment')),
            ],
        ),
        migrations.CreateModel(
            name='VetJudgment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_judgment', models.DateField()),
                ('telemedicine_category', models.CharField(choices=[('Triage', 'Teletriage'), ('Consultation', 'Teleconsultation'), ('Monitoring', 'Telemonitoring'), ('Advice', 'Teleadvice')], max_length=20)),
                ('request_type', models.CharField(choices=[('Emergency', 'Emergency'), ('Non Emergency', 'Non Emergency')], max_length=15)),
                ('emergency_condition', models.CharField(blank=True, choices=[('severe_bleeding', 'Severe Bleeding'), ('dystocia', 'Dystocia'), ('bloat', 'Bloat'), ('snake bite', 'Snake Bite'), ('fracture', 'Fracture'), ('uterine prolapse', 'Uterine Prolapse'), ('choking', 'Choking'), ('milk fever', 'Milk Fever'), ('none', 'None')], max_length=50, null=True)),
                ('non_emergency_condition', models.CharField(blank=True, choices=[('Chronic Condition', 'Chronic Condition'), ('Farm Visit', 'Farm Visit'), ('None', 'None')], max_length=50, null=True)),
                ('livestock_category', models.CharField(choices=[('Cattle', 'Cattle'), ('Sheep', 'Sheep'), ('Goat', 'Goat'), ('Donkey', 'Donkey'), ('Dog', 'Dog'), ('Cat', 'Cat'), ('Poultry', 'Poultry'), ('Horse', 'Horse'), ('None', 'None')], max_length=20)),
                ('other_livestock_category', models.CharField(blank=True, max_length=255, null=True)),
                ('tentative_diagnosis', models.TextField()),
                ('prognosis', models.CharField(choices=[('Good', 'Good'), ('Fair', 'Fair'), ('Poor', 'Poor'), ('Grave', 'Grave')], max_length=10)),
                ('practitioner_judgment', models.CharField(choices=[('Manageable', 'Manageable'), ('Culling', 'Culling'), ('Emergency Slaughter', 'Emergency Slaughter'), ('Referred Case', 'Referred Case')], max_length=25)),
                ('prescription_details', models.TextField(blank=True, null=True)),
                ('vet_name', models.CharField(max_length=100)),
                ('kvb_no', models.CharField(blank=True, max_length=100, null=True)),
                ('vet_category', models.CharField(blank=True, max_length=100, null=True)),
                ('vet_contact', models.CharField(blank=True, max_length=13, null=True)),
                ('referral_details', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='WeeklyMilkRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('week_start_date', models.DateField()),
                ('total_quantity', models.FloatField(help_text='Total milk in liters for the week')),
            ],
        ),
        migrations.CreateModel(
            name='YearlyReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_submission', models.DateField()),
                ('sub_county', models.CharField(max_length=100)),
                ('ward_level', models.CharField(max_length=100)),
                ('submitted_by', models.CharField(max_length=100)),
                ('registration_number', models.CharField(max_length=50)),
                ('phone_number', models.CharField(max_length=15)),
                ('uploaded_report', models.FileField(upload_to='monthly_reports/')),
            ],
        ),
    ]
